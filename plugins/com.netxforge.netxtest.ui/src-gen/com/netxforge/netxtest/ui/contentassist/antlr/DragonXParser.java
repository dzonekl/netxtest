/*
* generated by Xtext
*/
package com.netxforge.netxtest.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.netxforge.netxtest.services.DragonXGrammarAccess;

public class DragonXParser extends AbstractContentAssistParser {
	
	@Inject
	private DragonXGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.netxforge.netxtest.ui.contentassist.antlr.internal.InternalDragonXParser createParser() {
		com.netxforge.netxtest.ui.contentassist.antlr.internal.InternalDragonXParser result = new com.netxforge.netxtest.ui.contentassist.antlr.internal.InternalDragonXParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getUEMetaObjectAccess().getAlternatives(), "rule__UEMetaObject__Alternatives");
					put(grammarAccess.getUEValueAccess().getAlternatives(), "rule__UEValue__Alternatives");
					put(grammarAccess.getActionAccess().getAlternatives_0(), "rule__Action__Alternatives_0");
					put(grammarAccess.getParameterUssdAccess().getAlternatives_1(), "rule__ParameterUssd__Alternatives_1");
					put(grammarAccess.getParameterMixerAccess().getAlternatives(), "rule__ParameterMixer__Alternatives");
					put(grammarAccess.getMIXERAccess().getAlternatives(), "rule__MIXER__Alternatives");
					put(grammarAccess.getUSSDREGISTRATIONAccess().getAlternatives(), "rule__USSDREGISTRATION__Alternatives");
					put(grammarAccess.getCALLFORWARDINGAccess().getAlternatives(), "rule__CALLFORWARDING__Alternatives");
					put(grammarAccess.getBARRINGAccess().getAlternatives(), "rule__BARRING__Alternatives");
					put(grammarAccess.getLINEIDENTIFICATIONAccess().getAlternatives(), "rule__LINEIDENTIFICATION__Alternatives");
					put(grammarAccess.getANSWERRESPONSEAccess().getAlternatives(), "rule__ANSWERRESPONSE__Alternatives");
					put(grammarAccess.getCALLRESPONSEAccess().getAlternatives(), "rule__CALLRESPONSE__Alternatives");
					put(grammarAccess.getUEPARAMSAccess().getAlternatives(), "rule__UEPARAMS__Alternatives");
					put(grammarAccess.getDragonXAccess().getGroup(), "rule__DragonX__Group__0");
					put(grammarAccess.getUEAccess().getGroup(), "rule__UE__Group__0");
					put(grammarAccess.getUEMetaObjectAccess().getGroup_0(), "rule__UEMetaObject__Group_0__0");
					put(grammarAccess.getTestCaseAccess().getGroup(), "rule__TestCase__Group__0");
					put(grammarAccess.getDescriptionObjectAccess().getGroup(), "rule__DescriptionObject__Group__0");
					put(grammarAccess.getProcedureAccess().getGroup(), "rule__Procedure__Group__0");
					put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
					put(grammarAccess.getActionAccess().getGroup_0_0(), "rule__Action__Group_0_0__0");
					put(grammarAccess.getActionAccess().getGroup_0_1(), "rule__Action__Group_0_1__0");
					put(grammarAccess.getActionAccess().getGroup_0_2(), "rule__Action__Group_0_2__0");
					put(grammarAccess.getActionAccess().getGroup_0_3(), "rule__Action__Group_0_3__0");
					put(grammarAccess.getActionAccess().getGroup_0_4(), "rule__Action__Group_0_4__0");
					put(grammarAccess.getActionAccess().getGroup_0_5(), "rule__Action__Group_0_5__0");
					put(grammarAccess.getParameterCallAccess().getGroup(), "rule__ParameterCall__Group__0");
					put(grammarAccess.getParameterCallAccess().getGroup_0(), "rule__ParameterCall__Group_0__0");
					put(grammarAccess.getParameterCallAccess().getGroup_1(), "rule__ParameterCall__Group_1__0");
					put(grammarAccess.getParameterCallAccess().getGroup_2(), "rule__ParameterCall__Group_2__0");
					put(grammarAccess.getParameterCallAccess().getGroup_3(), "rule__ParameterCall__Group_3__0");
					put(grammarAccess.getParameterCallAccess().getGroup_3_3(), "rule__ParameterCall__Group_3_3__0");
					put(grammarAccess.getParameterAnswerAccess().getGroup(), "rule__ParameterAnswer__Group__0");
					put(grammarAccess.getParameterAnswerAccess().getGroup_0(), "rule__ParameterAnswer__Group_0__0");
					put(grammarAccess.getParameterAnswerAccess().getGroup_1(), "rule__ParameterAnswer__Group_1__0");
					put(grammarAccess.getParameterAnswerAccess().getGroup_2(), "rule__ParameterAnswer__Group_2__0");
					put(grammarAccess.getParameterAnswerAccess().getGroup_3(), "rule__ParameterAnswer__Group_3__0");
					put(grammarAccess.getParameterUssdAccess().getGroup(), "rule__ParameterUssd__Group__0");
					put(grammarAccess.getParameterUssdAccess().getGroup_0(), "rule__ParameterUssd__Group_0__0");
					put(grammarAccess.getParameterUssdAccess().getGroup_1_0(), "rule__ParameterUssd__Group_1_0__0");
					put(grammarAccess.getParameterUssdAccess().getGroup_1_0_3(), "rule__ParameterUssd__Group_1_0_3__0");
					put(grammarAccess.getParameterUssdAccess().getGroup_1_0_4(), "rule__ParameterUssd__Group_1_0_4__0");
					put(grammarAccess.getParameterUssdAccess().getGroup_1_1(), "rule__ParameterUssd__Group_1_1__0");
					put(grammarAccess.getParameterUssdAccess().getGroup_1_1_3(), "rule__ParameterUssd__Group_1_1_3__0");
					put(grammarAccess.getParameterUssdAccess().getGroup_1_2(), "rule__ParameterUssd__Group_1_2__0");
					put(grammarAccess.getParameterSmsAccess().getGroup(), "rule__ParameterSms__Group__0");
					put(grammarAccess.getParameterSmsAccess().getGroup_0(), "rule__ParameterSms__Group_0__0");
					put(grammarAccess.getParameterSmsAccess().getGroup_1(), "rule__ParameterSms__Group_1__0");
					put(grammarAccess.getParameterDataAccess().getGroup(), "rule__ParameterData__Group__0");
					put(grammarAccess.getParameterDataAccess().getGroup_0(), "rule__ParameterData__Group_0__0");
					put(grammarAccess.getParameterDataAccess().getGroup_1(), "rule__ParameterData__Group_1__0");
					put(grammarAccess.getParameterDataAccess().getGroup_2(), "rule__ParameterData__Group_2__0");
					put(grammarAccess.getParameterMixerAccess().getGroup_0(), "rule__ParameterMixer__Group_0__0");
					put(grammarAccess.getQUALIFIED_IDAccess().getGroup(), "rule__QUALIFIED_ID__Group__0");
					put(grammarAccess.getQUALIFIED_IDAccess().getGroup_1(), "rule__QUALIFIED_ID__Group_1__0");
					put(grammarAccess.getDragonXAccess().getUesAssignment_0(), "rule__DragonX__UesAssignment_0");
					put(grammarAccess.getDragonXAccess().getTestsAssignment_1(), "rule__DragonX__TestsAssignment_1");
					put(grammarAccess.getUEAccess().getNameAssignment_1(), "rule__UE__NameAssignment_1");
					put(grammarAccess.getUEAccess().getMetaAssignment_3(), "rule__UE__MetaAssignment_3");
					put(grammarAccess.getUEMetaObjectAccess().getParamsAssignment_0_0(), "rule__UEMetaObject__ParamsAssignment_0_0");
					put(grammarAccess.getUEMetaObjectAccess().getParamValueAssignment_0_2(), "rule__UEMetaObject__ParamValueAssignment_0_2");
					put(grammarAccess.getTestCaseAccess().getNameAssignment_1(), "rule__TestCase__NameAssignment_1");
					put(grammarAccess.getTestCaseAccess().getDescriptionAssignment_3(), "rule__TestCase__DescriptionAssignment_3");
					put(grammarAccess.getTestCaseAccess().getProcedureAssignment_4(), "rule__TestCase__ProcedureAssignment_4");
					put(grammarAccess.getDescriptionObjectAccess().getDescriptionAssignment_2(), "rule__DescriptionObject__DescriptionAssignment_2");
					put(grammarAccess.getProcedureAccess().getActionsAssignment_2(), "rule__Procedure__ActionsAssignment_2");
					put(grammarAccess.getActionAccess().getNameAssignment_0_0_0(), "rule__Action__NameAssignment_0_0_0");
					put(grammarAccess.getActionAccess().getParameterSetAssignment_0_0_2(), "rule__Action__ParameterSetAssignment_0_0_2");
					put(grammarAccess.getActionAccess().getNameAssignment_0_1_0(), "rule__Action__NameAssignment_0_1_0");
					put(grammarAccess.getActionAccess().getParameterSetAssignment_0_1_2(), "rule__Action__ParameterSetAssignment_0_1_2");
					put(grammarAccess.getActionAccess().getNameAssignment_0_2_0(), "rule__Action__NameAssignment_0_2_0");
					put(grammarAccess.getActionAccess().getParameterSetAssignment_0_2_2(), "rule__Action__ParameterSetAssignment_0_2_2");
					put(grammarAccess.getActionAccess().getNameAssignment_0_3_0(), "rule__Action__NameAssignment_0_3_0");
					put(grammarAccess.getActionAccess().getParameterSetAssignment_0_3_2(), "rule__Action__ParameterSetAssignment_0_3_2");
					put(grammarAccess.getActionAccess().getNameAssignment_0_4_0(), "rule__Action__NameAssignment_0_4_0");
					put(grammarAccess.getActionAccess().getParameterSetAssignment_0_4_2(), "rule__Action__ParameterSetAssignment_0_4_2");
					put(grammarAccess.getActionAccess().getNameAssignment_0_5_0(), "rule__Action__NameAssignment_0_5_0");
					put(grammarAccess.getActionAccess().getParameterSetAssignment_0_5_2(), "rule__Action__ParameterSetAssignment_0_5_2");
					put(grammarAccess.getParameterSetCallAccess().getParametersAssignment(), "rule__ParameterSetCall__ParametersAssignment");
					put(grammarAccess.getParameterSetAnswerAccess().getParametersAssignment(), "rule__ParameterSetAnswer__ParametersAssignment");
					put(grammarAccess.getParameterSetUssdAccess().getParametersAssignment(), "rule__ParameterSetUssd__ParametersAssignment");
					put(grammarAccess.getParameterSetSmsAccess().getParametersAssignment(), "rule__ParameterSetSms__ParametersAssignment");
					put(grammarAccess.getParameterSetDataAccess().getParametersAssignment(), "rule__ParameterSetData__ParametersAssignment");
					put(grammarAccess.getParameterSetMixerAccess().getParametersAssignment(), "rule__ParameterSetMixer__ParametersAssignment");
					put(grammarAccess.getParameterCallAccess().getFromAssignment_0_2(), "rule__ParameterCall__FromAssignment_0_2");
					put(grammarAccess.getParameterCallAccess().getToAssignment_1_2(), "rule__ParameterCall__ToAssignment_1_2");
					put(grammarAccess.getParameterCallAccess().getCallingTimeAssignment_2_2(), "rule__ParameterCall__CallingTimeAssignment_2_2");
					put(grammarAccess.getParameterCallAccess().getOfhookResponseAssignment_3_2(), "rule__ParameterCall__OfhookResponseAssignment_3_2");
					put(grammarAccess.getParameterCallAccess().getResponseTimeAssignment_3_3_2(), "rule__ParameterCall__ResponseTimeAssignment_3_3_2");
					put(grammarAccess.getParameterAnswerAccess().getFromAssignment_0_2(), "rule__ParameterAnswer__FromAssignment_0_2");
					put(grammarAccess.getParameterAnswerAccess().getListeningTimeAssignment_1_2(), "rule__ParameterAnswer__ListeningTimeAssignment_1_2");
					put(grammarAccess.getParameterAnswerAccess().getAnswerTimeAssignment_2_2(), "rule__ParameterAnswer__AnswerTimeAssignment_2_2");
					put(grammarAccess.getParameterAnswerAccess().getResponseAssignment_3_2(), "rule__ParameterAnswer__ResponseAssignment_3_2");
					put(grammarAccess.getParameterUssdAccess().getFromAssignment_0_2(), "rule__ParameterUssd__FromAssignment_0_2");
					put(grammarAccess.getParameterUssdAccess().getCfCodeAssignment_1_0_2(), "rule__ParameterUssd__CfCodeAssignment_1_0_2");
					put(grammarAccess.getParameterUssdAccess().getDestinationAssignment_1_0_3_2(), "rule__ParameterUssd__DestinationAssignment_1_0_3_2");
					put(grammarAccess.getParameterUssdAccess().getServiceDelayAssignment_1_0_4_2(), "rule__ParameterUssd__ServiceDelayAssignment_1_0_4_2");
					put(grammarAccess.getParameterUssdAccess().getBarringCodeAssignment_1_1_2(), "rule__ParameterUssd__BarringCodeAssignment_1_1_2");
					put(grammarAccess.getParameterUssdAccess().getCodeAssignment_1_1_3_2(), "rule__ParameterUssd__CodeAssignment_1_1_3_2");
					put(grammarAccess.getParameterUssdAccess().getLiCodeAssignment_1_2_2(), "rule__ParameterUssd__LiCodeAssignment_1_2_2");
					put(grammarAccess.getParameterUssdAccess().getUssdregistrationAssignment_2(), "rule__ParameterUssd__UssdregistrationAssignment_2");
					put(grammarAccess.getParameterSmsAccess().getFromAssignment_0_2(), "rule__ParameterSms__FromAssignment_0_2");
					put(grammarAccess.getParameterSmsAccess().getToAssignment_1_2(), "rule__ParameterSms__ToAssignment_1_2");
					put(grammarAccess.getParameterSmsAccess().getMessageAssignment_2(), "rule__ParameterSms__MessageAssignment_2");
					put(grammarAccess.getParameterDataAccess().getFromAssignment_0_2(), "rule__ParameterData__FromAssignment_0_2");
					put(grammarAccess.getParameterDataAccess().getUrlAssignment_1_2(), "rule__ParameterData__UrlAssignment_1_2");
					put(grammarAccess.getParameterDataAccess().getToAssignment_2_2(), "rule__ParameterData__ToAssignment_2_2");
					put(grammarAccess.getParameterDataAccess().getDataAssignment_2_5(), "rule__ParameterData__DataAssignment_2_5");
					put(grammarAccess.getParameterMixerAccess().getMixerAssignment_0_0(), "rule__ParameterMixer__MixerAssignment_0_0");
					put(grammarAccess.getParameterMixerAccess().getValueAssignment_0_2(), "rule__ParameterMixer__ValueAssignment_0_2");
					put(grammarAccess.getParameterMixerAccess().getOptionAssignment_1(), "rule__ParameterMixer__OptionAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.netxforge.netxtest.ui.contentassist.antlr.internal.InternalDragonXParser typedParser = (com.netxforge.netxtest.ui.contentassist.antlr.internal.InternalDragonXParser) parser;
			typedParser.entryRuleDragonX();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DragonXGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DragonXGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
