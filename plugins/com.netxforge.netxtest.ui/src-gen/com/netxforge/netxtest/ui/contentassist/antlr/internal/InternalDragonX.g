/*
* generated by Xtext
*/
grammar InternalDragonX;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.netxforge.netxtest.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.netxforge.netxtest.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.netxforge.netxtest.services.DragonXGrammarAccess;

}

@parser::members {
 
 	private DragonXGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DragonXGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDragonX
entryRuleDragonX 
:
{ before(grammarAccess.getDragonXRule()); }
	 ruleDragonX
{ after(grammarAccess.getDragonXRule()); } 
	 EOF 
;

// Rule DragonX
ruleDragonX
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDragonXAccess().getGroup()); }
(rule__DragonX__Group__0)
{ after(grammarAccess.getDragonXAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUE
entryRuleUE 
:
{ before(grammarAccess.getUERule()); }
	 ruleUE
{ after(grammarAccess.getUERule()); } 
	 EOF 
;

// Rule UE
ruleUE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUEAccess().getGroup()); }
(rule__UE__Group__0)
{ after(grammarAccess.getUEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUEMetaObject
entryRuleUEMetaObject 
:
{ before(grammarAccess.getUEMetaObjectRule()); }
	 ruleUEMetaObject
{ after(grammarAccess.getUEMetaObjectRule()); } 
	 EOF 
;

// Rule UEMetaObject
ruleUEMetaObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUEMetaObjectAccess().getAlternatives()); }
(rule__UEMetaObject__Alternatives)
{ after(grammarAccess.getUEMetaObjectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUEValue
entryRuleUEValue 
:
{ before(grammarAccess.getUEValueRule()); }
	 ruleUEValue
{ after(grammarAccess.getUEValueRule()); } 
	 EOF 
;

// Rule UEValue
ruleUEValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUEValueAccess().getAlternatives()); }
(rule__UEValue__Alternatives)
{ after(grammarAccess.getUEValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestCase
entryRuleTestCase 
:
{ before(grammarAccess.getTestCaseRule()); }
	 ruleTestCase
{ after(grammarAccess.getTestCaseRule()); } 
	 EOF 
;

// Rule TestCase
ruleTestCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestCaseAccess().getGroup()); }
(rule__TestCase__Group__0)
{ after(grammarAccess.getTestCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDescriptionObject
entryRuleDescriptionObject 
:
{ before(grammarAccess.getDescriptionObjectRule()); }
	 ruleDescriptionObject
{ after(grammarAccess.getDescriptionObjectRule()); } 
	 EOF 
;

// Rule DescriptionObject
ruleDescriptionObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDescriptionObjectAccess().getGroup()); }
(rule__DescriptionObject__Group__0)
{ after(grammarAccess.getDescriptionObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedure
entryRuleProcedure 
:
{ before(grammarAccess.getProcedureRule()); }
	 ruleProcedure
{ after(grammarAccess.getProcedureRule()); } 
	 EOF 
;

// Rule Procedure
ruleProcedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedureAccess().getGroup()); }
(rule__Procedure__Group__0)
{ after(grammarAccess.getProcedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getAlternatives()); }
(rule__Action__Alternatives)
{ after(grammarAccess.getActionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamType
entryRuleParamType 
:
{ before(grammarAccess.getParamTypeRule()); }
	 ruleParamType
{ after(grammarAccess.getParamTypeRule()); } 
	 EOF 
;

// Rule ParamType
ruleParamType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamTypeAccess().getAlternatives()); }
(rule__ParamType__Alternatives)
{ after(grammarAccess.getParamTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamResponseType
entryRuleParamResponseType 
:
{ before(grammarAccess.getParamResponseTypeRule()); }
	 ruleParamResponseType
{ after(grammarAccess.getParamResponseTypeRule()); } 
	 EOF 
;

// Rule ParamResponseType
ruleParamResponseType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getParamResponseTypeAccess().getParamResponseAssignment()); }
(rule__ParamResponseType__ParamResponseAssignment)
{ after(grammarAccess.getParamResponseTypeAccess().getParamResponseAssignment()); }
)
(
{ before(grammarAccess.getParamResponseTypeAccess().getParamResponseAssignment()); }
(rule__ParamResponseType__ParamResponseAssignment)*
{ after(grammarAccess.getParamResponseTypeAccess().getParamResponseAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule PARAM_NAME
rulePARAM_NAME
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPARAM_NAMEAccess().getAlternatives()); }
(rule__PARAM_NAME__Alternatives)
{ after(grammarAccess.getPARAM_NAMEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PARAM_RESPONSE
rulePARAM_RESPONSE
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPARAM_RESPONSEAccess().getAlternatives()); }
(rule__PARAM_RESPONSE__Alternatives)
{ after(grammarAccess.getPARAM_RESPONSEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ACTIONCODE
ruleACTIONCODE
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getACTIONCODEAccess().getAlternatives()); }
(rule__ACTIONCODE__Alternatives)
{ after(grammarAccess.getACTIONCODEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UEPARAMS
ruleUEPARAMS
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEPARAMSAccess().getAlternatives()); }
(rule__UEPARAMS__Alternatives)
{ after(grammarAccess.getUEPARAMSAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__UEMetaObject__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEMetaObjectAccess().getGroup_0()); }
(rule__UEMetaObject__Group_0__0)
{ after(grammarAccess.getUEMetaObjectAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getUEMetaObjectAccess().getDescriptionObjectParserRuleCall_1()); }
	ruleDescriptionObject
{ after(grammarAccess.getUEMetaObjectAccess().getDescriptionObjectParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UEValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEValueAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getUEValueAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUEValueAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getUEValueAccess().getIDTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getUEValueAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getUEValueAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getActionCodeAssignment_0()); }
(rule__Action__ActionCodeAssignment_0)
{ after(grammarAccess.getActionAccess().getActionCodeAssignment_0()); }
)

    |(
{ before(grammarAccess.getActionAccess().getGroup_1()); }
(rule__Action__Group_1__0)
{ after(grammarAccess.getActionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamTypeAccess().getUeRefAssignment_0()); }
(rule__ParamType__UeRefAssignment_0)
{ after(grammarAccess.getParamTypeAccess().getUeRefAssignment_0()); }
)

    |(
{ before(grammarAccess.getParamTypeAccess().getValueAssignment_1()); }
(rule__ParamType__ValueAssignment_1)
{ after(grammarAccess.getParamTypeAccess().getValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getParamTypeAccess().getResponseAssignment_2()); }
(rule__ParamType__ResponseAssignment_2)
{ after(grammarAccess.getParamTypeAccess().getResponseAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PARAM_NAME__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPARAM_NAMEAccess().getFromEnumLiteralDeclaration_0()); }
(	'From' 
)
{ after(grammarAccess.getPARAM_NAMEAccess().getFromEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPARAM_NAMEAccess().getToEnumLiteralDeclaration_1()); }
(	'To' 
)
{ after(grammarAccess.getPARAM_NAMEAccess().getToEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPARAM_NAMEAccess().getCallDurationEnumLiteralDeclaration_2()); }
(	'CallingTime' 
)
{ after(grammarAccess.getPARAM_NAMEAccess().getCallDurationEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getPARAM_NAMEAccess().getResponseTimeEnumLiteralDeclaration_3()); }
(	'ResponseTime' 
)
{ after(grammarAccess.getPARAM_NAMEAccess().getResponseTimeEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getPARAM_NAMEAccess().getListeningTimeEnumLiteralDeclaration_4()); }
(	'ListeningTime' 
)
{ after(grammarAccess.getPARAM_NAMEAccess().getListeningTimeEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getPARAM_NAMEAccess().getDataEnumLiteralDeclaration_5()); }
(	'Data' 
)
{ after(grammarAccess.getPARAM_NAMEAccess().getDataEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getPARAM_NAMEAccess().getMessageEnumLiteralDeclaration_6()); }
(	'SMS' 
)
{ after(grammarAccess.getPARAM_NAMEAccess().getMessageEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getPARAM_NAMEAccess().getUssdCodeEnumLiteralDeclaration_7()); }
(	'UssdCode' 
)
{ after(grammarAccess.getPARAM_NAMEAccess().getUssdCodeEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getPARAM_NAMEAccess().getServiceDelayEnumLiteralDeclaration_8()); }
(	'ServiceDelay' 
)
{ after(grammarAccess.getPARAM_NAMEAccess().getServiceDelayEnumLiteralDeclaration_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PARAM_RESPONSE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPARAM_RESPONSEAccess().getListiningEnumLiteralDeclaration_0()); }
(	'Listening' 
)
{ after(grammarAccess.getPARAM_RESPONSEAccess().getListiningEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPARAM_RESPONSEAccess().getOffhookEnumLiteralDeclaration_1()); }
(	'OffHook' 
)
{ after(grammarAccess.getPARAM_RESPONSEAccess().getOffhookEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPARAM_RESPONSEAccess().getHangupEnumLiteralDeclaration_2()); }
(	'HangUp' 
)
{ after(grammarAccess.getPARAM_RESPONSEAccess().getHangupEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ACTIONCODE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getACTIONCODEAccess().getCallEnumLiteralDeclaration_0()); }
(	'CALL' 
)
{ after(grammarAccess.getACTIONCODEAccess().getCallEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getACTIONCODEAccess().getAnswerEnumLiteralDeclaration_1()); }
(	'ANSWER' 
)
{ after(grammarAccess.getACTIONCODEAccess().getAnswerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getACTIONCODEAccess().getUssdEnumLiteralDeclaration_2()); }
(	'USSD' 
)
{ after(grammarAccess.getACTIONCODEAccess().getUssdEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getACTIONCODEAccess().getSmsEnumLiteralDeclaration_3()); }
(	'SMS' 
)
{ after(grammarAccess.getACTIONCODEAccess().getSmsEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getACTIONCODEAccess().getDataEnumLiteralDeclaration_4()); }
(	'DATA' 
)
{ after(grammarAccess.getACTIONCODEAccess().getDataEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getACTIONCODEAccess().getMixerEnumLiteralDeclaration_5()); }
(	'MIXER' 
)
{ after(grammarAccess.getACTIONCODEAccess().getMixerEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UEPARAMS__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEPARAMSAccess().getImeiEnumLiteralDeclaration_0()); }
(	'IMEI' 
)
{ after(grammarAccess.getUEPARAMSAccess().getImeiEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUEPARAMSAccess().getMsisdnEnumLiteralDeclaration_1()); }
(	'MSISDN' 
)
{ after(grammarAccess.getUEPARAMSAccess().getMsisdnEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__DragonX__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DragonX__Group__0__Impl
	rule__DragonX__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DragonX__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDragonXAccess().getUesAssignment_0()); }
(rule__DragonX__UesAssignment_0)
{ after(grammarAccess.getDragonXAccess().getUesAssignment_0()); }
)
(
{ before(grammarAccess.getDragonXAccess().getUesAssignment_0()); }
(rule__DragonX__UesAssignment_0)*
{ after(grammarAccess.getDragonXAccess().getUesAssignment_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DragonX__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DragonX__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DragonX__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getDragonXAccess().getTestsAssignment_1()); }
(rule__DragonX__TestsAssignment_1)
{ after(grammarAccess.getDragonXAccess().getTestsAssignment_1()); }
)
(
{ before(grammarAccess.getDragonXAccess().getTestsAssignment_1()); }
(rule__DragonX__TestsAssignment_1)*
{ after(grammarAccess.getDragonXAccess().getTestsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UE__Group__0__Impl
	rule__UE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEAccess().getUEKeyword_0()); }

	'UE' 

{ after(grammarAccess.getUEAccess().getUEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UE__Group__1__Impl
	rule__UE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEAccess().getNameAssignment_1()); }
(rule__UE__NameAssignment_1)
{ after(grammarAccess.getUEAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UE__Group__2__Impl
	rule__UE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getUEAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UE__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UE__Group__3__Impl
	rule__UE__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UE__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUEAccess().getMetaAssignment_3()); }
(rule__UE__MetaAssignment_3)
{ after(grammarAccess.getUEAccess().getMetaAssignment_3()); }
)
(
{ before(grammarAccess.getUEAccess().getMetaAssignment_3()); }
(rule__UE__MetaAssignment_3)*
{ after(grammarAccess.getUEAccess().getMetaAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UE__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UE__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UE__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getUEAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__UEMetaObject__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UEMetaObject__Group_0__0__Impl
	rule__UEMetaObject__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UEMetaObject__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEMetaObjectAccess().getParamsAssignment_0_0()); }
(rule__UEMetaObject__ParamsAssignment_0_0)
{ after(grammarAccess.getUEMetaObjectAccess().getParamsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UEMetaObject__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UEMetaObject__Group_0__1__Impl
	rule__UEMetaObject__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UEMetaObject__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEMetaObjectAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getUEMetaObjectAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UEMetaObject__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UEMetaObject__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UEMetaObject__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEMetaObjectAccess().getParamValueAssignment_0_2()); }
(rule__UEMetaObject__ParamValueAssignment_0_2)
{ after(grammarAccess.getUEMetaObjectAccess().getParamValueAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TestCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__0__Impl
	rule__TestCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getTestCaseKeyword_0()); }

	'TestCase' 

{ after(grammarAccess.getTestCaseAccess().getTestCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__1__Impl
	rule__TestCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getNameAssignment_1()); }
(rule__TestCase__NameAssignment_1)
{ after(grammarAccess.getTestCaseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__2__Impl
	rule__TestCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getTestCaseAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__3__Impl
	rule__TestCase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getDescriptionAssignment_3()); }
(rule__TestCase__DescriptionAssignment_3)?
{ after(grammarAccess.getTestCaseAccess().getDescriptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__4__Impl
	rule__TestCase__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getProcedureAssignment_4()); }
(rule__TestCase__ProcedureAssignment_4)
{ after(grammarAccess.getTestCaseAccess().getProcedureAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestCase__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestCase__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getTestCaseAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DescriptionObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescriptionObject__Group__0__Impl
	rule__DescriptionObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionObjectAccess().getDescriptionKeyword_0()); }

	'Description' 

{ after(grammarAccess.getDescriptionObjectAccess().getDescriptionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DescriptionObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescriptionObject__Group__1__Impl
	rule__DescriptionObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionObjectAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getDescriptionObjectAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DescriptionObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DescriptionObject__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionObjectAccess().getDescriptionAssignment_2()); }
(rule__DescriptionObject__DescriptionAssignment_2)
{ after(grammarAccess.getDescriptionObjectAccess().getDescriptionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Procedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__0__Impl
	rule__Procedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getTestKeyword_0()); }

	'Test' 

{ after(grammarAccess.getProcedureAccess().getTestKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__1__Impl
	rule__Procedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getProcedureAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__2__Impl
	rule__Procedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getProcedureAccess().getActionsAssignment_2()); }
(rule__Procedure__ActionsAssignment_2)
{ after(grammarAccess.getProcedureAccess().getActionsAssignment_2()); }
)
(
{ before(grammarAccess.getProcedureAccess().getActionsAssignment_2()); }
(rule__Procedure__ActionsAssignment_2)*
{ after(grammarAccess.getProcedureAccess().getActionsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getProcedureAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Action__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1__0__Impl
	rule__Action__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_1_0()); }

	'{' 

{ after(grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1__1__Impl
	rule__Action__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParameterSetAssignment_1_1()); }
(rule__Action__ParameterSetAssignment_1_1)
{ after(grammarAccess.getActionAccess().getParameterSetAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_1_2()); }

	'}' 

{ after(grammarAccess.getActionAccess().getRightCurlyBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
(rule__Parameter__NameAssignment_0)
{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_1()); }
(rule__Parameter__TypeAssignment_1)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__DragonX__UesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDragonXAccess().getUesUEParserRuleCall_0_0()); }
	ruleUE{ after(grammarAccess.getDragonXAccess().getUesUEParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DragonX__TestsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDragonXAccess().getTestsTestCaseParserRuleCall_1_0()); }
	ruleTestCase{ after(grammarAccess.getDragonXAccess().getTestsTestCaseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UE__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUEAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UE__MetaAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEAccess().getMetaUEMetaObjectParserRuleCall_3_0()); }
	ruleUEMetaObject{ after(grammarAccess.getUEAccess().getMetaUEMetaObjectParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UEMetaObject__ParamsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEMetaObjectAccess().getParamsUEPARAMSEnumRuleCall_0_0_0()); }
	ruleUEPARAMS{ after(grammarAccess.getUEMetaObjectAccess().getParamsUEPARAMSEnumRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UEMetaObject__ParamValueAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUEMetaObjectAccess().getParamValueUEValueParserRuleCall_0_2_0()); }
	ruleUEValue{ after(grammarAccess.getUEMetaObjectAccess().getParamValueUEValueParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTestCaseAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__DescriptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getDescriptionDescriptionObjectParserRuleCall_3_0()); }
	ruleDescriptionObject{ after(grammarAccess.getTestCaseAccess().getDescriptionDescriptionObjectParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestCase__ProcedureAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestCaseAccess().getProcedureProcedureParserRuleCall_4_0()); }
	ruleProcedure{ after(grammarAccess.getTestCaseAccess().getProcedureProcedureParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DescriptionObject__DescriptionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionObjectAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getDescriptionObjectAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__ActionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getActionsActionParserRuleCall_2_0()); }
	ruleAction{ after(grammarAccess.getProcedureAccess().getActionsActionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActionCodeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getActionCodeACTIONCODEEnumRuleCall_0_0()); }
	ruleACTIONCODE{ after(grammarAccess.getActionAccess().getActionCodeACTIONCODEEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ParameterSetAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getParameterSetParameterParserRuleCall_1_1_0()); }
	ruleParameter{ after(grammarAccess.getActionAccess().getParameterSetParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNamePARAM_NAMEEnumRuleCall_0_0()); }
	rulePARAM_NAME{ after(grammarAccess.getParameterAccess().getNamePARAM_NAMEEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeParamTypeParserRuleCall_1_0()); }
	ruleParamType{ after(grammarAccess.getParameterAccess().getTypeParamTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamType__UeRefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamTypeAccess().getUeRefUECrossReference_0_0()); }
(
{ before(grammarAccess.getParamTypeAccess().getUeRefUEIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getParamTypeAccess().getUeRefUEIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getParamTypeAccess().getUeRefUECrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamType__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamTypeAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getParamTypeAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamType__ResponseAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamTypeAccess().getResponseParamResponseTypeParserRuleCall_2_0()); }
	ruleParamResponseType{ after(grammarAccess.getParamTypeAccess().getResponseParamResponseTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamResponseType__ParamResponseAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamResponseTypeAccess().getParamResponsePARAM_RESPONSEEnumRuleCall_0()); }
	rulePARAM_RESPONSE{ after(grammarAccess.getParamResponseTypeAccess().getParamResponsePARAM_RESPONSEEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


