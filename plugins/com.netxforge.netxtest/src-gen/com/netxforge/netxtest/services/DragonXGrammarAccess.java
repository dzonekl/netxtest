/*
* generated by Xtext
*/
package com.netxforge.netxtest.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class DragonXGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DragonXElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DragonX");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cUesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cUesUEParserRuleCall_0_0 = (RuleCall)cUesAssignment_0.eContents().get(0);
		private final Assignment cTestsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTestsTestCaseParserRuleCall_1_0 = (RuleCall)cTestsAssignment_1.eContents().get(0);
		
		//// DragonX script exists of UE- and TestCase blocks
		//DragonX:
		//	ues+=UE+ tests+=TestCase+;
		public ParserRule getRule() { return rule; }

		//ues+=UE+ tests+=TestCase+
		public Group getGroup() { return cGroup; }

		//ues+=UE+
		public Assignment getUesAssignment_0() { return cUesAssignment_0; }

		//UE
		public RuleCall getUesUEParserRuleCall_0_0() { return cUesUEParserRuleCall_0_0; }

		//tests+=TestCase+
		public Assignment getTestsAssignment_1() { return cTestsAssignment_1; }

		//TestCase
		public RuleCall getTestsTestCaseParserRuleCall_1_0() { return cTestsTestCaseParserRuleCall_1_0; }
	}

	public class UEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UE");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUEKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMetaAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMetaUEMetaObjectParserRuleCall_3_0 = (RuleCall)cMetaAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//// UE block
		//UE:
		//	"UE" name=ID "{" meta+=UEMetaObject+ "}";
		public ParserRule getRule() { return rule; }

		//"UE" name=ID "{" meta+=UEMetaObject+ "}"
		public Group getGroup() { return cGroup; }

		//"UE"
		public Keyword getUEKeyword_0() { return cUEKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//meta+=UEMetaObject+
		public Assignment getMetaAssignment_3() { return cMetaAssignment_3; }

		//UEMetaObject
		public RuleCall getMetaUEMetaObjectParserRuleCall_3_0() { return cMetaUEMetaObjectParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class UEMetaObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UEMetaObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cParamsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cParamsUEPARAMSEnumRuleCall_0_0_0 = (RuleCall)cParamsAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cParamValueAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cParamValueUEValueParserRuleCall_0_2_0 = (RuleCall)cParamValueAssignment_0_2.eContents().get(0);
		private final RuleCall cDescriptionObjectParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//UEMetaObject:
		//	params=UEPARAMS ":" paramValue=UEValue | DescriptionObject;
		public ParserRule getRule() { return rule; }

		//params=UEPARAMS ":" paramValue=UEValue | DescriptionObject
		public Alternatives getAlternatives() { return cAlternatives; }

		//params=UEPARAMS ":" paramValue=UEValue
		public Group getGroup_0() { return cGroup_0; }

		//params=UEPARAMS
		public Assignment getParamsAssignment_0_0() { return cParamsAssignment_0_0; }

		//UEPARAMS
		public RuleCall getParamsUEPARAMSEnumRuleCall_0_0_0() { return cParamsUEPARAMSEnumRuleCall_0_0_0; }

		//":"
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }

		//paramValue=UEValue
		public Assignment getParamValueAssignment_0_2() { return cParamValueAssignment_0_2; }

		//UEValue
		public RuleCall getParamValueUEValueParserRuleCall_0_2_0() { return cParamValueUEValueParserRuleCall_0_2_0; }

		//DescriptionObject
		public RuleCall getDescriptionObjectParserRuleCall_1() { return cDescriptionObjectParserRuleCall_1; }
	}

	public class UEValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UEValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//UEValue:
		//	STRING | ID | INT;
		public ParserRule getRule() { return rule; }

		//STRING | ID | INT
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}

	public class TestCaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TestCase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTestCaseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionDescriptionObjectParserRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Assignment cProcedureAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cProcedureProcedureParserRuleCall_4_0 = (RuleCall)cProcedureAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//// TestCase block	
		//TestCase:
		//	"TestCase" name=ID "{" description=DescriptionObject? procedure=Procedure "}";
		public ParserRule getRule() { return rule; }

		//"TestCase" name=ID "{" description=DescriptionObject? procedure=Procedure "}"
		public Group getGroup() { return cGroup; }

		//"TestCase"
		public Keyword getTestCaseKeyword_0() { return cTestCaseKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//description=DescriptionObject?
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }

		//DescriptionObject
		public RuleCall getDescriptionDescriptionObjectParserRuleCall_3_0() { return cDescriptionDescriptionObjectParserRuleCall_3_0; }

		//procedure=Procedure
		public Assignment getProcedureAssignment_4() { return cProcedureAssignment_4; }

		//Procedure
		public RuleCall getProcedureProcedureParserRuleCall_4_0() { return cProcedureProcedureParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class DescriptionObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DescriptionObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDescriptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		
		//DescriptionObject:
		//	"Description" ":" description=STRING;
		public ParserRule getRule() { return rule; }

		//"Description" ":" description=STRING
		public Group getGroup() { return cGroup; }

		//"Description"
		public Keyword getDescriptionKeyword_0() { return cDescriptionKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//description=STRING
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
	}

	public class ProcedureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Procedure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_2_0 = (RuleCall)cActionsAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Procedure:
		//	"Test" "{" actions+=Action+ "}";
		public ParserRule getRule() { return rule; }

		//"Test" "{" actions+=Action+ "}"
		public Group getGroup() { return cGroup; }

		//"Test"
		public Keyword getTestKeyword_0() { return cTestKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//actions+=Action+
		public Assignment getActionsAssignment_2() { return cActionsAssignment_2; }

		//Action
		public RuleCall getActionsActionParserRuleCall_2_0() { return cActionsActionParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Action");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cActionCodeAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cActionCodeACTIONCODEEnumRuleCall_0_0 = (RuleCall)cActionCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cParameterSetAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cParameterSetParameterParserRuleCall_1_1_0 = (RuleCall)cParameterSetAssignment_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//Action:
		//	actionCode=ACTIONCODE | "{" parameterSet+=Parameter "}";
		public ParserRule getRule() { return rule; }

		//actionCode=ACTIONCODE | "{" parameterSet+=Parameter "}"
		public Alternatives getAlternatives() { return cAlternatives; }

		//actionCode=ACTIONCODE
		public Assignment getActionCodeAssignment_0() { return cActionCodeAssignment_0; }

		//ACTIONCODE
		public RuleCall getActionCodeACTIONCODEEnumRuleCall_0_0() { return cActionCodeACTIONCODEEnumRuleCall_0_0; }

		//"{" parameterSet+=Parameter "}"
		public Group getGroup_1() { return cGroup_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }

		//parameterSet+=Parameter
		public Assignment getParameterSetAssignment_1_1() { return cParameterSetAssignment_1_1; }

		//Parameter
		public RuleCall getParameterSetParameterParserRuleCall_1_1_0() { return cParameterSetParameterParserRuleCall_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_2() { return cRightCurlyBracketKeyword_1_2; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNamePARAM_NAMEEnumRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeParamTypeParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//// Superclass ParameterSet
		////ParameterSet:
		////	parameters+=(ParameterSetCall | ParameterSetAnswer | ParameterSetUssd | ParameterSetSms | ParameterSetData |
		////	ParameterSetMixer);
		////
		////ParameterSetCall:
		////	parameters+=ParameterCall+;
		////
		////ParameterSetAnswer:
		////	parameters+=ParameterAnswer+;
		////
		////ParameterSetUssd:
		////	parameters+=ParameterUssd+;
		////
		////ParameterSetSms:
		////	parameters+=ParameterSms+;
		////
		////ParameterSetData:
		////	parameters+=ParameterData+;
		////
		////ParameterSetMixer:
		////	parameters+=ParameterMixer+;
		//// Superclass Parameter
		////Parameter:
		////	ParameterCall | ParameterAnswer | ParameterUssd | ParameterSms | ParameterData | ParameterMixer;
		//Parameter:
		//	name=PARAM_NAME type=ParamType;
		public ParserRule getRule() { return rule; }

		//name=PARAM_NAME type=ParamType
		public Group getGroup() { return cGroup; }

		//name=PARAM_NAME
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//PARAM_NAME
		public RuleCall getNamePARAM_NAMEEnumRuleCall_0_0() { return cNamePARAM_NAMEEnumRuleCall_0_0; }

		//type=ParamType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//ParamType
		public RuleCall getTypeParamTypeParserRuleCall_1_0() { return cTypeParamTypeParserRuleCall_1_0; }
	}

	public class ParamTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParamType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cUeRefAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final CrossReference cUeRefUECrossReference_0_0 = (CrossReference)cUeRefAssignment_0.eContents().get(0);
		private final RuleCall cUeRefUEIDTerminalRuleCall_0_0_1 = (RuleCall)cUeRefUECrossReference_0_0.eContents().get(1);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final Assignment cResponseAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cResponseParamResponseTypeParserRuleCall_2_0 = (RuleCall)cResponseAssignment_2.eContents().get(0);
		
		//ParamType:
		//	ueRef=[UE] | value=INT | response=ParamResponseType;
		public ParserRule getRule() { return rule; }

		//ueRef=[UE] | value=INT | response=ParamResponseType
		public Alternatives getAlternatives() { return cAlternatives; }

		//ueRef=[UE]
		public Assignment getUeRefAssignment_0() { return cUeRefAssignment_0; }

		//[UE]
		public CrossReference getUeRefUECrossReference_0_0() { return cUeRefUECrossReference_0_0; }

		//ID
		public RuleCall getUeRefUEIDTerminalRuleCall_0_0_1() { return cUeRefUEIDTerminalRuleCall_0_0_1; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//response=ParamResponseType
		public Assignment getResponseAssignment_2() { return cResponseAssignment_2; }

		//ParamResponseType
		public RuleCall getResponseParamResponseTypeParserRuleCall_2_0() { return cResponseParamResponseTypeParserRuleCall_2_0; }
	}

	public class ParamResponseTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParamResponseType");
		private final Assignment cParamResponseAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cParamResponsePARAM_RESPONSEEnumRuleCall_0 = (RuleCall)cParamResponseAssignment.eContents().get(0);
		
		//ParamResponseType:
		//	paramResponse+=PARAM_RESPONSE+;
		public ParserRule getRule() { return rule; }

		//paramResponse+=PARAM_RESPONSE+
		public Assignment getParamResponseAssignment() { return cParamResponseAssignment; }

		//PARAM_RESPONSE
		public RuleCall getParamResponsePARAM_RESPONSEEnumRuleCall_0() { return cParamResponsePARAM_RESPONSEEnumRuleCall_0; }
	}

	public class QUALIFIED_IDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QUALIFIED_ID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cSpaceFullStopSpaceKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QUALIFIED_ID:
		//	ID (" . " ID)*;
		public ParserRule getRule() { return rule; }

		//ID (" . " ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//(" . " ID)*
		public Group getGroup_1() { return cGroup_1; }

		//" . "
		public Keyword getSpaceFullStopSpaceKeyword_1_0() { return cSpaceFullStopSpaceKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	
	public class PARAM_NAMEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "PARAM_NAME");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFromEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFromFromKeyword_0_0 = (Keyword)cFromEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cToEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cToToKeyword_1_0 = (Keyword)cToEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCallDurationEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCallDurationCallingTimeKeyword_2_0 = (Keyword)cCallDurationEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cResponseTimeEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cResponseTimeResponseTimeKeyword_3_0 = (Keyword)cResponseTimeEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cListeningTimeEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cListeningTimeListeningTimeKeyword_4_0 = (Keyword)cListeningTimeEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDataEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDataDataKeyword_5_0 = (Keyword)cDataEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cMessageEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cMessageSMSKeyword_6_0 = (Keyword)cMessageEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cUssdCodeEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cUssdCodeUssdCodeKeyword_7_0 = (Keyword)cUssdCodeEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cServiceDelayEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cServiceDelayServiceDelayKeyword_8_0 = (Keyword)cServiceDelayEnumLiteralDeclaration_8.eContents().get(0);
		
		//enum PARAM_NAME:
		//	from="From" | to="To" | callDuration="CallingTime" | responseTime="ResponseTime" | listeningTime="ListeningTime" |
		//	data="Data" | message="SMS" | ussdCode="UssdCode" | serviceDelay="ServiceDelay";
		public EnumRule getRule() { return rule; }

		//from="From" | to="To" | callDuration="CallingTime" | responseTime="ResponseTime" | listeningTime="ListeningTime" |
		//data="Data" | message="SMS" | ussdCode="UssdCode" | serviceDelay="ServiceDelay"
		public Alternatives getAlternatives() { return cAlternatives; }

		//from="From"
		public EnumLiteralDeclaration getFromEnumLiteralDeclaration_0() { return cFromEnumLiteralDeclaration_0; }

		//"From"
		public Keyword getFromFromKeyword_0_0() { return cFromFromKeyword_0_0; }

		//to="To"
		public EnumLiteralDeclaration getToEnumLiteralDeclaration_1() { return cToEnumLiteralDeclaration_1; }

		//"To"
		public Keyword getToToKeyword_1_0() { return cToToKeyword_1_0; }

		//callDuration="CallingTime"
		public EnumLiteralDeclaration getCallDurationEnumLiteralDeclaration_2() { return cCallDurationEnumLiteralDeclaration_2; }

		//"CallingTime"
		public Keyword getCallDurationCallingTimeKeyword_2_0() { return cCallDurationCallingTimeKeyword_2_0; }

		//responseTime="ResponseTime"
		public EnumLiteralDeclaration getResponseTimeEnumLiteralDeclaration_3() { return cResponseTimeEnumLiteralDeclaration_3; }

		//"ResponseTime"
		public Keyword getResponseTimeResponseTimeKeyword_3_0() { return cResponseTimeResponseTimeKeyword_3_0; }

		//listeningTime="ListeningTime"
		public EnumLiteralDeclaration getListeningTimeEnumLiteralDeclaration_4() { return cListeningTimeEnumLiteralDeclaration_4; }

		//"ListeningTime"
		public Keyword getListeningTimeListeningTimeKeyword_4_0() { return cListeningTimeListeningTimeKeyword_4_0; }

		//data="Data"
		public EnumLiteralDeclaration getDataEnumLiteralDeclaration_5() { return cDataEnumLiteralDeclaration_5; }

		//"Data"
		public Keyword getDataDataKeyword_5_0() { return cDataDataKeyword_5_0; }

		//message="SMS"
		public EnumLiteralDeclaration getMessageEnumLiteralDeclaration_6() { return cMessageEnumLiteralDeclaration_6; }

		//"SMS"
		public Keyword getMessageSMSKeyword_6_0() { return cMessageSMSKeyword_6_0; }

		//ussdCode="UssdCode"
		public EnumLiteralDeclaration getUssdCodeEnumLiteralDeclaration_7() { return cUssdCodeEnumLiteralDeclaration_7; }

		//"UssdCode"
		public Keyword getUssdCodeUssdCodeKeyword_7_0() { return cUssdCodeUssdCodeKeyword_7_0; }

		//serviceDelay="ServiceDelay"
		public EnumLiteralDeclaration getServiceDelayEnumLiteralDeclaration_8() { return cServiceDelayEnumLiteralDeclaration_8; }

		//"ServiceDelay"
		public Keyword getServiceDelayServiceDelayKeyword_8_0() { return cServiceDelayServiceDelayKeyword_8_0; }
	}

	public class PARAM_RESPONSEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "PARAM_RESPONSE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cListiningEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cListiningListeningKeyword_0_0 = (Keyword)cListiningEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOffhookEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOffhookOffHookKeyword_1_0 = (Keyword)cOffhookEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cHangupEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cHangupHangUpKeyword_2_0 = (Keyword)cHangupEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum PARAM_RESPONSE:
		//	listining="Listening" | offhook="OffHook" | hangup="HangUp";
		public EnumRule getRule() { return rule; }

		//listining="Listening" | offhook="OffHook" | hangup="HangUp"
		public Alternatives getAlternatives() { return cAlternatives; }

		//listining="Listening"
		public EnumLiteralDeclaration getListiningEnumLiteralDeclaration_0() { return cListiningEnumLiteralDeclaration_0; }

		//"Listening"
		public Keyword getListiningListeningKeyword_0_0() { return cListiningListeningKeyword_0_0; }

		//offhook="OffHook"
		public EnumLiteralDeclaration getOffhookEnumLiteralDeclaration_1() { return cOffhookEnumLiteralDeclaration_1; }

		//"OffHook"
		public Keyword getOffhookOffHookKeyword_1_0() { return cOffhookOffHookKeyword_1_0; }

		//hangup="HangUp"
		public EnumLiteralDeclaration getHangupEnumLiteralDeclaration_2() { return cHangupEnumLiteralDeclaration_2; }

		//"HangUp"
		public Keyword getHangupHangUpKeyword_2_0() { return cHangupHangUpKeyword_2_0; }
	}

	public class ACTIONCODEElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ACTIONCODE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCallEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCallCALLKeyword_0_0 = (Keyword)cCallEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAnswerEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAnswerANSWERKeyword_1_0 = (Keyword)cAnswerEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cUssdEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cUssdUSSDKeyword_2_0 = (Keyword)cUssdEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSmsEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSmsSMSKeyword_3_0 = (Keyword)cSmsEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDataEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDataDATAKeyword_4_0 = (Keyword)cDataEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cMixerEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cMixerMIXERKeyword_5_0 = (Keyword)cMixerEnumLiteralDeclaration_5.eContents().get(0);
		
		////
		////ParameterCall returns Parameter:
		////	(name='From' ':' ueRef=[UE]) | (name='To' ':' ueRef=[UE]) | (name='CallingTime' ':' value=INT) | (name='Response' ':'
		////	response=('Listening' | 'HangUp')) | (name='ResponseTime' ':' value=INT);
		////
		////ParameterAnswer returns Parameter:
		////	(name='From' ':' ueRef=[UE]) | (name='ListeningTime' ':' value=INT) | (name='ResponseTime' ':' value=INT) |
		////	(name='Response' ':' response=('Listening' | 'OffHook' | 'HangUp'));
		////
		////ParameterUssd:
		////	(name='From' ':' ueRef=[UE]) | (name='UssdCode' ':' ussdCode=USSDCODES) | (name='Destination' ':' dest=[UE]) |
		////	(name='ServiceDelay' ':' serviceDelay=INT) | (name='Code' ':' code=INT) | (name='Registration' ':'
		////	registration=('Activate' | 'Deactivate'));
		////
		////ParameterSms:
		////	(name='From' ':' ueRef=[UE]) | (name='To' ':' ueRef=[UE]) | (name='Message' ':' message=STRING);
		////
		////ParameterData:
		////	(name='From' ':' ueRef=[UE]) | (name='To' ':' ueRef=[UE]) | (name='Url' ':' url=STRING) | (name='Data' ':'
		////	value=STRING);
		////
		////ParameterMixer:
		////	(name='P1' ':' value=INT) | (name='P2' ':' value=INT) | (name='P3' ':' value=INT) | (name='P4' ':' value=INT) |
		////	(name='P5' ':' value=INT) | (name='P6' ':' value=INT) | (name='Option' ':' option='Reset');
		//enum ACTIONCODE:
		//	call="CALL" | answer="ANSWER" | ussd="USSD" | sms="SMS" | data="DATA" | mixer="MIXER";
		public EnumRule getRule() { return rule; }

		//call="CALL" | answer="ANSWER" | ussd="USSD" | sms="SMS" | data="DATA" | mixer="MIXER"
		public Alternatives getAlternatives() { return cAlternatives; }

		//call="CALL"
		public EnumLiteralDeclaration getCallEnumLiteralDeclaration_0() { return cCallEnumLiteralDeclaration_0; }

		//"CALL"
		public Keyword getCallCALLKeyword_0_0() { return cCallCALLKeyword_0_0; }

		//answer="ANSWER"
		public EnumLiteralDeclaration getAnswerEnumLiteralDeclaration_1() { return cAnswerEnumLiteralDeclaration_1; }

		//"ANSWER"
		public Keyword getAnswerANSWERKeyword_1_0() { return cAnswerANSWERKeyword_1_0; }

		//ussd="USSD"
		public EnumLiteralDeclaration getUssdEnumLiteralDeclaration_2() { return cUssdEnumLiteralDeclaration_2; }

		//"USSD"
		public Keyword getUssdUSSDKeyword_2_0() { return cUssdUSSDKeyword_2_0; }

		//sms="SMS"
		public EnumLiteralDeclaration getSmsEnumLiteralDeclaration_3() { return cSmsEnumLiteralDeclaration_3; }

		//"SMS"
		public Keyword getSmsSMSKeyword_3_0() { return cSmsSMSKeyword_3_0; }

		//data="DATA"
		public EnumLiteralDeclaration getDataEnumLiteralDeclaration_4() { return cDataEnumLiteralDeclaration_4; }

		//"DATA"
		public Keyword getDataDATAKeyword_4_0() { return cDataDATAKeyword_4_0; }

		//mixer="MIXER"
		public EnumLiteralDeclaration getMixerEnumLiteralDeclaration_5() { return cMixerEnumLiteralDeclaration_5; }

		//"MIXER"
		public Keyword getMixerMIXERKeyword_5_0() { return cMixerMIXERKeyword_5_0; }
	}

	public class UEPARAMSElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "UEPARAMS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cImeiEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cImeiIMEIKeyword_0_0 = (Keyword)cImeiEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMsisdnEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMsisdnMSISDNKeyword_1_0 = (Keyword)cMsisdnEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum UEPARAMS:
		//	imei="IMEI" | msisdn="MSISDN";
		public EnumRule getRule() { return rule; }

		//imei="IMEI" | msisdn="MSISDN"
		public Alternatives getAlternatives() { return cAlternatives; }

		//imei="IMEI"
		public EnumLiteralDeclaration getImeiEnumLiteralDeclaration_0() { return cImeiEnumLiteralDeclaration_0; }

		//"IMEI"
		public Keyword getImeiIMEIKeyword_0_0() { return cImeiIMEIKeyword_0_0; }

		//msisdn="MSISDN"
		public EnumLiteralDeclaration getMsisdnEnumLiteralDeclaration_1() { return cMsisdnEnumLiteralDeclaration_1; }

		//"MSISDN"
		public Keyword getMsisdnMSISDNKeyword_1_0() { return cMsisdnMSISDNKeyword_1_0; }
	}

	public class USSDCODESElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "USSDCODES");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCfuEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCfuCFUKeyword_0_0 = (Keyword)cCfuEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCfbEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCfbCFBKeyword_1_0 = (Keyword)cCfbEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cCfnaEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cCfnaCFNAKeyword_2_0 = (Keyword)cCfnaEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cCfnrEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cCfnrCFNRKeyword_3_0 = (Keyword)cCfnrEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cAcdEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cAcdACDKeyword_4_0 = (Keyword)cAcdEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cAllOutgoingCallsEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cAllOutgoingCallsAllOutgoingCallsKeyword_5_0 = (Keyword)cAllOutgoingCallsEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cAllIncommingCallsEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cAllIncommingCallsAllIncomingCallsKeyword_6_0 = (Keyword)cAllIncommingCallsEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cAllOutgoingCallsExHomeEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cAllOutgoingCallsExHomeAllOutgoingCallsExHomeKeyword_7_0 = (Keyword)cAllOutgoingCallsExHomeEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cAllIncommingCallsRoamingEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cAllIncommingCallsRoamingAllIncommingCallsRoamingKeyword_8_0 = (Keyword)cAllIncommingCallsRoamingEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cClipEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cClipCLIPKeyword_9_0 = (Keyword)cClipEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cClirEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cClirCLIRKeyword_10_0 = (Keyword)cClirEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cColpEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cColpCOLPKeyword_11_0 = (Keyword)cColpEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cColrEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cColrCOLRKeyword_12_0 = (Keyword)cColrEnumLiteralDeclaration_12.eContents().get(0);
		
		//enum USSDCODES:
		//	cfu="CFU" | cfb="CFB" | cfna="CFNA" | cfnr="CFNR" | acd="ACD" | allOutgoingCalls="AllOutgoingCalls" |
		//	allIncommingCalls="AllIncomingCalls" | allOutgoingCallsExHome="AllOutgoingCallsExHome" |
		//	allIncommingCallsRoaming="AllIncommingCallsRoaming" | clip="CLIP" | clir="CLIR" | colp="COLP" | colr="COLR";
		public EnumRule getRule() { return rule; }

		//cfu="CFU" | cfb="CFB" | cfna="CFNA" | cfnr="CFNR" | acd="ACD" | allOutgoingCalls="AllOutgoingCalls" |
		//allIncommingCalls="AllIncomingCalls" | allOutgoingCallsExHome="AllOutgoingCallsExHome" |
		//allIncommingCallsRoaming="AllIncommingCallsRoaming" | clip="CLIP" | clir="CLIR" | colp="COLP" | colr="COLR"
		public Alternatives getAlternatives() { return cAlternatives; }

		//cfu="CFU"
		public EnumLiteralDeclaration getCfuEnumLiteralDeclaration_0() { return cCfuEnumLiteralDeclaration_0; }

		//"CFU"
		public Keyword getCfuCFUKeyword_0_0() { return cCfuCFUKeyword_0_0; }

		//cfb="CFB"
		public EnumLiteralDeclaration getCfbEnumLiteralDeclaration_1() { return cCfbEnumLiteralDeclaration_1; }

		//"CFB"
		public Keyword getCfbCFBKeyword_1_0() { return cCfbCFBKeyword_1_0; }

		//cfna="CFNA"
		public EnumLiteralDeclaration getCfnaEnumLiteralDeclaration_2() { return cCfnaEnumLiteralDeclaration_2; }

		//"CFNA"
		public Keyword getCfnaCFNAKeyword_2_0() { return cCfnaCFNAKeyword_2_0; }

		//cfnr="CFNR"
		public EnumLiteralDeclaration getCfnrEnumLiteralDeclaration_3() { return cCfnrEnumLiteralDeclaration_3; }

		//"CFNR"
		public Keyword getCfnrCFNRKeyword_3_0() { return cCfnrCFNRKeyword_3_0; }

		//acd="ACD"
		public EnumLiteralDeclaration getAcdEnumLiteralDeclaration_4() { return cAcdEnumLiteralDeclaration_4; }

		//"ACD"
		public Keyword getAcdACDKeyword_4_0() { return cAcdACDKeyword_4_0; }

		//allOutgoingCalls="AllOutgoingCalls"
		public EnumLiteralDeclaration getAllOutgoingCallsEnumLiteralDeclaration_5() { return cAllOutgoingCallsEnumLiteralDeclaration_5; }

		//"AllOutgoingCalls"
		public Keyword getAllOutgoingCallsAllOutgoingCallsKeyword_5_0() { return cAllOutgoingCallsAllOutgoingCallsKeyword_5_0; }

		//allIncommingCalls="AllIncomingCalls"
		public EnumLiteralDeclaration getAllIncommingCallsEnumLiteralDeclaration_6() { return cAllIncommingCallsEnumLiteralDeclaration_6; }

		//"AllIncomingCalls"
		public Keyword getAllIncommingCallsAllIncomingCallsKeyword_6_0() { return cAllIncommingCallsAllIncomingCallsKeyword_6_0; }

		//allOutgoingCallsExHome="AllOutgoingCallsExHome"
		public EnumLiteralDeclaration getAllOutgoingCallsExHomeEnumLiteralDeclaration_7() { return cAllOutgoingCallsExHomeEnumLiteralDeclaration_7; }

		//"AllOutgoingCallsExHome"
		public Keyword getAllOutgoingCallsExHomeAllOutgoingCallsExHomeKeyword_7_0() { return cAllOutgoingCallsExHomeAllOutgoingCallsExHomeKeyword_7_0; }

		//allIncommingCallsRoaming="AllIncommingCallsRoaming"
		public EnumLiteralDeclaration getAllIncommingCallsRoamingEnumLiteralDeclaration_8() { return cAllIncommingCallsRoamingEnumLiteralDeclaration_8; }

		//"AllIncommingCallsRoaming"
		public Keyword getAllIncommingCallsRoamingAllIncommingCallsRoamingKeyword_8_0() { return cAllIncommingCallsRoamingAllIncommingCallsRoamingKeyword_8_0; }

		//clip="CLIP"
		public EnumLiteralDeclaration getClipEnumLiteralDeclaration_9() { return cClipEnumLiteralDeclaration_9; }

		//"CLIP"
		public Keyword getClipCLIPKeyword_9_0() { return cClipCLIPKeyword_9_0; }

		//clir="CLIR"
		public EnumLiteralDeclaration getClirEnumLiteralDeclaration_10() { return cClirEnumLiteralDeclaration_10; }

		//"CLIR"
		public Keyword getClirCLIRKeyword_10_0() { return cClirCLIRKeyword_10_0; }

		//colp="COLP"
		public EnumLiteralDeclaration getColpEnumLiteralDeclaration_11() { return cColpEnumLiteralDeclaration_11; }

		//"COLP"
		public Keyword getColpCOLPKeyword_11_0() { return cColpCOLPKeyword_11_0; }

		//colr="COLR"
		public EnumLiteralDeclaration getColrEnumLiteralDeclaration_12() { return cColrEnumLiteralDeclaration_12; }

		//"COLR"
		public Keyword getColrCOLRKeyword_12_0() { return cColrCOLRKeyword_12_0; }
	}
	
	private DragonXElements pDragonX;
	private UEElements pUE;
	private UEMetaObjectElements pUEMetaObject;
	private UEValueElements pUEValue;
	private TestCaseElements pTestCase;
	private DescriptionObjectElements pDescriptionObject;
	private ProcedureElements pProcedure;
	private ActionElements pAction;
	private ParameterElements pParameter;
	private ParamTypeElements pParamType;
	private ParamResponseTypeElements pParamResponseType;
	private PARAM_NAMEElements unknownRulePARAM_NAME;
	private PARAM_RESPONSEElements unknownRulePARAM_RESPONSE;
	private ACTIONCODEElements unknownRuleACTIONCODE;
	private UEPARAMSElements unknownRuleUEPARAMS;
	private USSDCODESElements unknownRuleUSSDCODES;
	private QUALIFIED_IDElements pQUALIFIED_ID;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public DragonXGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.netxforge.netxtest.DragonX".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// DragonX script exists of UE- and TestCase blocks
	//DragonX:
	//	ues+=UE+ tests+=TestCase+;
	public DragonXElements getDragonXAccess() {
		return (pDragonX != null) ? pDragonX : (pDragonX = new DragonXElements());
	}
	
	public ParserRule getDragonXRule() {
		return getDragonXAccess().getRule();
	}

	//// UE block
	//UE:
	//	"UE" name=ID "{" meta+=UEMetaObject+ "}";
	public UEElements getUEAccess() {
		return (pUE != null) ? pUE : (pUE = new UEElements());
	}
	
	public ParserRule getUERule() {
		return getUEAccess().getRule();
	}

	//UEMetaObject:
	//	params=UEPARAMS ":" paramValue=UEValue | DescriptionObject;
	public UEMetaObjectElements getUEMetaObjectAccess() {
		return (pUEMetaObject != null) ? pUEMetaObject : (pUEMetaObject = new UEMetaObjectElements());
	}
	
	public ParserRule getUEMetaObjectRule() {
		return getUEMetaObjectAccess().getRule();
	}

	//UEValue:
	//	STRING | ID | INT;
	public UEValueElements getUEValueAccess() {
		return (pUEValue != null) ? pUEValue : (pUEValue = new UEValueElements());
	}
	
	public ParserRule getUEValueRule() {
		return getUEValueAccess().getRule();
	}

	//// TestCase block	
	//TestCase:
	//	"TestCase" name=ID "{" description=DescriptionObject? procedure=Procedure "}";
	public TestCaseElements getTestCaseAccess() {
		return (pTestCase != null) ? pTestCase : (pTestCase = new TestCaseElements());
	}
	
	public ParserRule getTestCaseRule() {
		return getTestCaseAccess().getRule();
	}

	//DescriptionObject:
	//	"Description" ":" description=STRING;
	public DescriptionObjectElements getDescriptionObjectAccess() {
		return (pDescriptionObject != null) ? pDescriptionObject : (pDescriptionObject = new DescriptionObjectElements());
	}
	
	public ParserRule getDescriptionObjectRule() {
		return getDescriptionObjectAccess().getRule();
	}

	//Procedure:
	//	"Test" "{" actions+=Action+ "}";
	public ProcedureElements getProcedureAccess() {
		return (pProcedure != null) ? pProcedure : (pProcedure = new ProcedureElements());
	}
	
	public ParserRule getProcedureRule() {
		return getProcedureAccess().getRule();
	}

	//Action:
	//	actionCode=ACTIONCODE | "{" parameterSet+=Parameter "}";
	public ActionElements getActionAccess() {
		return (pAction != null) ? pAction : (pAction = new ActionElements());
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}

	//// Superclass ParameterSet
	////ParameterSet:
	////	parameters+=(ParameterSetCall | ParameterSetAnswer | ParameterSetUssd | ParameterSetSms | ParameterSetData |
	////	ParameterSetMixer);
	////
	////ParameterSetCall:
	////	parameters+=ParameterCall+;
	////
	////ParameterSetAnswer:
	////	parameters+=ParameterAnswer+;
	////
	////ParameterSetUssd:
	////	parameters+=ParameterUssd+;
	////
	////ParameterSetSms:
	////	parameters+=ParameterSms+;
	////
	////ParameterSetData:
	////	parameters+=ParameterData+;
	////
	////ParameterSetMixer:
	////	parameters+=ParameterMixer+;
	//// Superclass Parameter
	////Parameter:
	////	ParameterCall | ParameterAnswer | ParameterUssd | ParameterSms | ParameterData | ParameterMixer;
	//Parameter:
	//	name=PARAM_NAME type=ParamType;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	//ParamType:
	//	ueRef=[UE] | value=INT | response=ParamResponseType;
	public ParamTypeElements getParamTypeAccess() {
		return (pParamType != null) ? pParamType : (pParamType = new ParamTypeElements());
	}
	
	public ParserRule getParamTypeRule() {
		return getParamTypeAccess().getRule();
	}

	//ParamResponseType:
	//	paramResponse+=PARAM_RESPONSE+;
	public ParamResponseTypeElements getParamResponseTypeAccess() {
		return (pParamResponseType != null) ? pParamResponseType : (pParamResponseType = new ParamResponseTypeElements());
	}
	
	public ParserRule getParamResponseTypeRule() {
		return getParamResponseTypeAccess().getRule();
	}

	//enum PARAM_NAME:
	//	from="From" | to="To" | callDuration="CallingTime" | responseTime="ResponseTime" | listeningTime="ListeningTime" |
	//	data="Data" | message="SMS" | ussdCode="UssdCode" | serviceDelay="ServiceDelay";
	public PARAM_NAMEElements getPARAM_NAMEAccess() {
		return (unknownRulePARAM_NAME != null) ? unknownRulePARAM_NAME : (unknownRulePARAM_NAME = new PARAM_NAMEElements());
	}
	
	public EnumRule getPARAM_NAMERule() {
		return getPARAM_NAMEAccess().getRule();
	}

	//enum PARAM_RESPONSE:
	//	listining="Listening" | offhook="OffHook" | hangup="HangUp";
	public PARAM_RESPONSEElements getPARAM_RESPONSEAccess() {
		return (unknownRulePARAM_RESPONSE != null) ? unknownRulePARAM_RESPONSE : (unknownRulePARAM_RESPONSE = new PARAM_RESPONSEElements());
	}
	
	public EnumRule getPARAM_RESPONSERule() {
		return getPARAM_RESPONSEAccess().getRule();
	}

	////
	////ParameterCall returns Parameter:
	////	(name='From' ':' ueRef=[UE]) | (name='To' ':' ueRef=[UE]) | (name='CallingTime' ':' value=INT) | (name='Response' ':'
	////	response=('Listening' | 'HangUp')) | (name='ResponseTime' ':' value=INT);
	////
	////ParameterAnswer returns Parameter:
	////	(name='From' ':' ueRef=[UE]) | (name='ListeningTime' ':' value=INT) | (name='ResponseTime' ':' value=INT) |
	////	(name='Response' ':' response=('Listening' | 'OffHook' | 'HangUp'));
	////
	////ParameterUssd:
	////	(name='From' ':' ueRef=[UE]) | (name='UssdCode' ':' ussdCode=USSDCODES) | (name='Destination' ':' dest=[UE]) |
	////	(name='ServiceDelay' ':' serviceDelay=INT) | (name='Code' ':' code=INT) | (name='Registration' ':'
	////	registration=('Activate' | 'Deactivate'));
	////
	////ParameterSms:
	////	(name='From' ':' ueRef=[UE]) | (name='To' ':' ueRef=[UE]) | (name='Message' ':' message=STRING);
	////
	////ParameterData:
	////	(name='From' ':' ueRef=[UE]) | (name='To' ':' ueRef=[UE]) | (name='Url' ':' url=STRING) | (name='Data' ':'
	////	value=STRING);
	////
	////ParameterMixer:
	////	(name='P1' ':' value=INT) | (name='P2' ':' value=INT) | (name='P3' ':' value=INT) | (name='P4' ':' value=INT) |
	////	(name='P5' ':' value=INT) | (name='P6' ':' value=INT) | (name='Option' ':' option='Reset');
	//enum ACTIONCODE:
	//	call="CALL" | answer="ANSWER" | ussd="USSD" | sms="SMS" | data="DATA" | mixer="MIXER";
	public ACTIONCODEElements getACTIONCODEAccess() {
		return (unknownRuleACTIONCODE != null) ? unknownRuleACTIONCODE : (unknownRuleACTIONCODE = new ACTIONCODEElements());
	}
	
	public EnumRule getACTIONCODERule() {
		return getACTIONCODEAccess().getRule();
	}

	//enum UEPARAMS:
	//	imei="IMEI" | msisdn="MSISDN";
	public UEPARAMSElements getUEPARAMSAccess() {
		return (unknownRuleUEPARAMS != null) ? unknownRuleUEPARAMS : (unknownRuleUEPARAMS = new UEPARAMSElements());
	}
	
	public EnumRule getUEPARAMSRule() {
		return getUEPARAMSAccess().getRule();
	}

	//enum USSDCODES:
	//	cfu="CFU" | cfb="CFB" | cfna="CFNA" | cfnr="CFNR" | acd="ACD" | allOutgoingCalls="AllOutgoingCalls" |
	//	allIncommingCalls="AllIncomingCalls" | allOutgoingCallsExHome="AllOutgoingCallsExHome" |
	//	allIncommingCallsRoaming="AllIncommingCallsRoaming" | clip="CLIP" | clir="CLIR" | colp="COLP" | colr="COLR";
	public USSDCODESElements getUSSDCODESAccess() {
		return (unknownRuleUSSDCODES != null) ? unknownRuleUSSDCODES : (unknownRuleUSSDCODES = new USSDCODESElements());
	}
	
	public EnumRule getUSSDCODESRule() {
		return getUSSDCODESAccess().getRule();
	}

	//QUALIFIED_ID:
	//	ID (" . " ID)*;
	public QUALIFIED_IDElements getQUALIFIED_IDAccess() {
		return (pQUALIFIED_ID != null) ? pQUALIFIED_ID : (pQUALIFIED_ID = new QUALIFIED_IDElements());
	}
	
	public ParserRule getQUALIFIED_IDRule() {
		return getQUALIFIED_IDAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
