/*
* generated by Xtext
*/
grammar InternalDragonX;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.netxforge.netxtest.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.netxforge.netxtest.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.netxforge.netxtest.services.DragonXGrammarAccess;

}

@parser::members {

 	private DragonXGrammarAccess grammarAccess;
 	
    public InternalDragonXParser(TokenStream input, DragonXGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DragonX";	
   	}
   	
   	@Override
   	protected DragonXGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDragonX
entryRuleDragonX returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDragonXRule()); }
	 iv_ruleDragonX=ruleDragonX 
	 { $current=$iv_ruleDragonX.current; } 
	 EOF 
;

// Rule DragonX
ruleDragonX returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDragonXAccess().getUesUEParserRuleCall_0_0()); 
	    }
		lv_ues_0_0=ruleUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDragonXRule());
	        }
       		add(
       			$current, 
       			"ues",
        		lv_ues_0_0, 
        		"UE");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDragonXAccess().getTestsTestCaseParserRuleCall_1_0()); 
	    }
		lv_tests_1_0=ruleTestCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDragonXRule());
	        }
       		add(
       			$current, 
       			"tests",
        		lv_tests_1_0, 
        		"TestCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleUE
entryRuleUE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUERule()); }
	 iv_ruleUE=ruleUE 
	 { $current=$iv_ruleUE.current; } 
	 EOF 
;

// Rule UE
ruleUE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='UE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUEAccess().getUEKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getUEAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUERule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUEAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUEAccess().getMetaUEMetaObjectParserRuleCall_3_0()); 
	    }
		lv_meta_3_0=ruleUEMetaObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUERule());
	        }
       		add(
       			$current, 
       			"meta",
        		lv_meta_3_0, 
        		"UEMetaObject");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUEAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleUEMetaObject
entryRuleUEMetaObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUEMetaObjectRule()); }
	 iv_ruleUEMetaObject=ruleUEMetaObject 
	 { $current=$iv_ruleUEMetaObject.current; } 
	 EOF 
;

// Rule UEMetaObject
ruleUEMetaObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getUEMetaObjectAccess().getParamsUEPARAMSEnumRuleCall_0_0_0()); 
	    }
		lv_params_0_0=ruleUEPARAMS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUEMetaObjectRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_0_0, 
        		"UEPARAMS");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUEMetaObjectAccess().getColonKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUEMetaObjectAccess().getParamValueUEValueParserRuleCall_0_2_0()); 
	    }
		lv_paramValue_2_0=ruleUEValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUEMetaObjectRule());
	        }
       		set(
       			$current, 
       			"paramValue",
        		lv_paramValue_2_0, 
        		"UEValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getUEMetaObjectAccess().getDescriptionObjectParserRuleCall_1()); 
    }
    this_DescriptionObject_3=ruleDescriptionObject
    { 
        $current = $this_DescriptionObject_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUEValue
entryRuleUEValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUEValueRule()); } 
	 iv_ruleUEValue=ruleUEValue 
	 { $current=$iv_ruleUEValue.current.getText(); }  
	 EOF 
;

// Rule UEValue
ruleUEValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getUEValueAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getUEValueAccess().getIDTerminalRuleCall_1()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getUEValueAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleTestCase
entryRuleTestCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTestCaseRule()); }
	 iv_ruleTestCase=ruleTestCase 
	 { $current=$iv_ruleTestCase.current; } 
	 EOF 
;

// Rule TestCase
ruleTestCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TestCase' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTestCaseAccess().getTestCaseKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTestCaseAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTestCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTestCaseAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseAccess().getDescriptionDescriptionObjectParserRuleCall_3_0()); 
	    }
		lv_description_3_0=ruleDescriptionObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_3_0, 
        		"DescriptionObject");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTestCaseAccess().getProcedureProcedureParserRuleCall_4_0()); 
	    }
		lv_procedure_4_0=ruleProcedure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTestCaseRule());
	        }
       		set(
       			$current, 
       			"procedure",
        		lv_procedure_4_0, 
        		"Procedure");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTestCaseAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDescriptionObject
entryRuleDescriptionObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionObjectRule()); }
	 iv_ruleDescriptionObject=ruleDescriptionObject 
	 { $current=$iv_ruleDescriptionObject.current; } 
	 EOF 
;

// Rule DescriptionObject
ruleDescriptionObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Description' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDescriptionObjectAccess().getDescriptionKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDescriptionObjectAccess().getColonKeyword_1());
    }
(
(
		lv_description_2_0=RULE_STRING
		{
			newLeafNode(lv_description_2_0, grammarAccess.getDescriptionObjectAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDescriptionObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleProcedure
entryRuleProcedure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcedureRule()); }
	 iv_ruleProcedure=ruleProcedure 
	 { $current=$iv_ruleProcedure.current; } 
	 EOF 
;

// Rule Procedure
ruleProcedure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Test' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcedureAccess().getTestKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProcedureAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedureAccess().getActionsActionParserRuleCall_2_0()); 
	    }
		lv_actions_2_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedureRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_2_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProcedureAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_name_0_0=	'CALL' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getActionAccess().getNameCALLKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "CALL");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getParameterSetParameterSetCallParserRuleCall_0_0_2_0()); 
	    }
		lv_parameterSet_2_0=ruleParameterSetCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"parameterSet",
        		lv_parameterSet_2_0, 
        		"ParameterSetCall");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_3_0=	'ANSWER' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getActionAccess().getNameANSWERKeyword_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "ANSWER");
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_0_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getParameterSetParameterSetAnswerParserRuleCall_0_1_2_0()); 
	    }
		lv_parameterSet_5_0=ruleParameterSetAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"parameterSet",
        		lv_parameterSet_5_0, 
        		"ParameterSetAnswer");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_6_0=	'USSD' 
    {
        newLeafNode(lv_name_6_0, grammarAccess.getActionAccess().getNameUSSDKeyword_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_6_0, "USSD");
	    }

)
)	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_0_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getParameterSetParameterSetUssdParserRuleCall_0_2_2_0()); 
	    }
		lv_parameterSet_8_0=ruleParameterSetUssd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"parameterSet",
        		lv_parameterSet_8_0, 
        		"ParameterSetUssd");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_9_0=	'SMS' 
    {
        newLeafNode(lv_name_9_0, grammarAccess.getActionAccess().getNameSMSKeyword_0_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_9_0, "SMS");
	    }

)
)	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_0_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getParameterSetParameterSetSmsParserRuleCall_0_3_2_0()); 
	    }
		lv_parameterSet_11_0=ruleParameterSetSms		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"parameterSet",
        		lv_parameterSet_11_0, 
        		"ParameterSetSms");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_12_0=	'DATA' 
    {
        newLeafNode(lv_name_12_0, grammarAccess.getActionAccess().getNameDATAKeyword_0_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_12_0, "DATA");
	    }

)
)	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_0_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getParameterSetParameterSetDataParserRuleCall_0_4_2_0()); 
	    }
		lv_parameterSet_14_0=ruleParameterSetData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"parameterSet",
        		lv_parameterSet_14_0, 
        		"ParameterSetData");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_15_0=	'MIXER' 
    {
        newLeafNode(lv_name_15_0, grammarAccess.getActionAccess().getNameMIXERKeyword_0_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActionRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_15_0, "MIXER");
	    }

)
)	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getActionAccess().getLeftCurlyBracketKeyword_0_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getParameterSetParameterSetMixerParserRuleCall_0_5_2_0()); 
	    }
		lv_parameterSet_17_0=ruleParameterSetMixer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"parameterSet",
        		lv_parameterSet_17_0, 
        		"ParameterSetMixer");
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getActionAccess().getRightCurlyBracketKeyword_1());
    }
)
;





// Entry rule entryRuleParameterSetCall
entryRuleParameterSetCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterSetCallRule()); }
	 iv_ruleParameterSetCall=ruleParameterSetCall 
	 { $current=$iv_ruleParameterSetCall.current; } 
	 EOF 
;

// Rule ParameterSetCall
ruleParameterSetCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterSetCallAccess().getParametersParameterCallParserRuleCall_0()); 
	    }
		lv_parameters_0_0=ruleParameterCall		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterSetCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"ParameterCall");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleParameterSetAnswer
entryRuleParameterSetAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterSetAnswerRule()); }
	 iv_ruleParameterSetAnswer=ruleParameterSetAnswer 
	 { $current=$iv_ruleParameterSetAnswer.current; } 
	 EOF 
;

// Rule ParameterSetAnswer
ruleParameterSetAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterSetAnswerAccess().getParametersParameterAnswerParserRuleCall_0()); 
	    }
		lv_parameters_0_0=ruleParameterAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterSetAnswerRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"ParameterAnswer");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleParameterSetUssd
entryRuleParameterSetUssd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterSetUssdRule()); }
	 iv_ruleParameterSetUssd=ruleParameterSetUssd 
	 { $current=$iv_ruleParameterSetUssd.current; } 
	 EOF 
;

// Rule ParameterSetUssd
ruleParameterSetUssd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterSetUssdAccess().getParametersParameterUssdParserRuleCall_0()); 
	    }
		lv_parameters_0_0=ruleParameterUssd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterSetUssdRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"ParameterUssd");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleParameterSetSms
entryRuleParameterSetSms returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterSetSmsRule()); }
	 iv_ruleParameterSetSms=ruleParameterSetSms 
	 { $current=$iv_ruleParameterSetSms.current; } 
	 EOF 
;

// Rule ParameterSetSms
ruleParameterSetSms returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterSetSmsAccess().getParametersParameterSmsParserRuleCall_0()); 
	    }
		lv_parameters_0_0=ruleParameterSms		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterSetSmsRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"ParameterSms");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleParameterSetData
entryRuleParameterSetData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterSetDataRule()); }
	 iv_ruleParameterSetData=ruleParameterSetData 
	 { $current=$iv_ruleParameterSetData.current; } 
	 EOF 
;

// Rule ParameterSetData
ruleParameterSetData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterSetDataAccess().getParametersParameterDataParserRuleCall_0()); 
	    }
		lv_parameters_0_0=ruleParameterData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterSetDataRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"ParameterData");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleParameterSetMixer
entryRuleParameterSetMixer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterSetMixerRule()); }
	 iv_ruleParameterSetMixer=ruleParameterSetMixer 
	 { $current=$iv_ruleParameterSetMixer.current; } 
	 EOF 
;

// Rule ParameterSetMixer
ruleParameterSetMixer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterSetMixerAccess().getParametersParameterMixerParserRuleCall_0()); 
	    }
		lv_parameters_0_0=ruleParameterMixer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterSetMixerRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_0_0, 
        		"ParameterMixer");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleParameterCall
entryRuleParameterCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterCallRule()); }
	 iv_ruleParameterCall=ruleParameterCall 
	 { $current=$iv_ruleParameterCall.current; } 
	 EOF 
;

// Rule ParameterCall
ruleParameterCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='From' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParameterCallAccess().getFromKeyword_0_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterCallAccess().getColonKeyword_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterCallRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getParameterCallAccess().getFromUECrossReference_0_2_0()); 
	}

)
))(	otherlv_3='To' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParameterCallAccess().getToKeyword_1_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterCallAccess().getColonKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterCallRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getParameterCallAccess().getToUECrossReference_1_2_0()); 
	}

)
))(	otherlv_6='CallingTime' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getParameterCallAccess().getCallingTimeKeyword_2_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getParameterCallAccess().getColonKeyword_2_1());
    }
(
(
		lv_callingTime_8_0=RULE_INT
		{
			newLeafNode(lv_callingTime_8_0, grammarAccess.getParameterCallAccess().getCallingTimeINTTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterCallRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"callingTime",
        		lv_callingTime_8_0, 
        		"INT");
	    }

)
))?(	otherlv_9='OffHookResponse' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getParameterCallAccess().getOffHookResponseKeyword_3_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getParameterCallAccess().getColonKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterCallAccess().getOfhookResponseCALLRESPONSEEnumRuleCall_3_2_0()); 
	    }
		lv_ofhookResponse_11_0=ruleCALLRESPONSE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterCallRule());
	        }
       		set(
       			$current, 
       			"ofhookResponse",
        		lv_ofhookResponse_11_0, 
        		"CALLRESPONSE");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12='ResponseTime' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getParameterCallAccess().getResponseTimeKeyword_3_3_0());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getParameterCallAccess().getColonKeyword_3_3_1());
    }
(
(
		lv_responseTime_14_0=RULE_INT
		{
			newLeafNode(lv_responseTime_14_0, grammarAccess.getParameterCallAccess().getResponseTimeINTTerminalRuleCall_3_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterCallRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"responseTime",
        		lv_responseTime_14_0, 
        		"INT");
	    }

)
))?))
;





// Entry rule entryRuleParameterAnswer
entryRuleParameterAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterAnswerRule()); }
	 iv_ruleParameterAnswer=ruleParameterAnswer 
	 { $current=$iv_ruleParameterAnswer.current; } 
	 EOF 
;

// Rule ParameterAnswer
ruleParameterAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='From' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParameterAnswerAccess().getFromKeyword_0_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterAnswerAccess().getColonKeyword_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterAnswerRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getParameterAnswerAccess().getFromUECrossReference_0_2_0()); 
	}

)
))(	otherlv_3='ListeningTime' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParameterAnswerAccess().getListeningTimeKeyword_1_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterAnswerAccess().getColonKeyword_1_1());
    }
(
(
		lv_listeningTime_5_0=RULE_INT
		{
			newLeafNode(lv_listeningTime_5_0, grammarAccess.getParameterAnswerAccess().getListeningTimeINTTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterAnswerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"listeningTime",
        		lv_listeningTime_5_0, 
        		"INT");
	    }

)
))(	otherlv_6='AnswerTime' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getParameterAnswerAccess().getAnswerTimeKeyword_2_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getParameterAnswerAccess().getColonKeyword_2_1());
    }
(
(
		lv_answerTime_8_0=RULE_INT
		{
			newLeafNode(lv_answerTime_8_0, grammarAccess.getParameterAnswerAccess().getAnswerTimeINTTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterAnswerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"answerTime",
        		lv_answerTime_8_0, 
        		"INT");
	    }

)
))?(	otherlv_9='Response' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getParameterAnswerAccess().getResponseKeyword_3_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getParameterAnswerAccess().getColonKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAnswerAccess().getResponseANSWERRESPONSEEnumRuleCall_3_2_0()); 
	    }
		lv_response_11_0=ruleANSWERRESPONSE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterAnswerRule());
	        }
       		set(
       			$current, 
       			"response",
        		lv_response_11_0, 
        		"ANSWERRESPONSE");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleParameterUssd
entryRuleParameterUssd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterUssdRule()); }
	 iv_ruleParameterUssd=ruleParameterUssd 
	 { $current=$iv_ruleParameterUssd.current; } 
	 EOF 
;

// Rule ParameterUssd
ruleParameterUssd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='From' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParameterUssdAccess().getFromKeyword_0_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterUssdAccess().getColonKeyword_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterUssdRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getParameterUssdAccess().getFromUECrossReference_0_2_0()); 
	}

)
))((	otherlv_3='USSDCode' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParameterUssdAccess().getUSSDCodeKeyword_1_0_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterUssdAccess().getColonKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterUssdAccess().getCfCodeCALLFORWARDINGEnumRuleCall_1_0_2_0()); 
	    }
		lv_cfCode_5_0=ruleCALLFORWARDING		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterUssdRule());
	        }
       		set(
       			$current, 
       			"cfCode",
        		lv_cfCode_5_0, 
        		"CALLFORWARDING");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='Destination' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getParameterUssdAccess().getDestinationKeyword_1_0_3_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getParameterUssdAccess().getColonKeyword_1_0_3_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterUssdRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getParameterUssdAccess().getDestinationUECrossReference_1_0_3_2_0()); 
	}

)
))?(	otherlv_9='ServiceDelay' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getParameterUssdAccess().getServiceDelayKeyword_1_0_4_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getParameterUssdAccess().getColonKeyword_1_0_4_1());
    }
(
(
		lv_serviceDelay_11_0=RULE_INT
		{
			newLeafNode(lv_serviceDelay_11_0, grammarAccess.getParameterUssdAccess().getServiceDelayINTTerminalRuleCall_1_0_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterUssdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"serviceDelay",
        		lv_serviceDelay_11_0, 
        		"INT");
	    }

)
))?)
    |(	otherlv_12='USSDCode' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getParameterUssdAccess().getUSSDCodeKeyword_1_1_0());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getParameterUssdAccess().getColonKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterUssdAccess().getBarringCodeBARRINGEnumRuleCall_1_1_2_0()); 
	    }
		lv_barringCode_14_0=ruleBARRING		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterUssdRule());
	        }
       		set(
       			$current, 
       			"barringCode",
        		lv_barringCode_14_0, 
        		"BARRING");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15='Code' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getParameterUssdAccess().getCodeKeyword_1_1_3_0());
    }
	otherlv_16=':' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getParameterUssdAccess().getColonKeyword_1_1_3_1());
    }
(
(
		lv_code_17_0=RULE_INT
		{
			newLeafNode(lv_code_17_0, grammarAccess.getParameterUssdAccess().getCodeINTTerminalRuleCall_1_1_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterUssdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"code",
        		lv_code_17_0, 
        		"INT");
	    }

)
))?)
    |(	otherlv_18='USSDCode' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getParameterUssdAccess().getUSSDCodeKeyword_1_2_0());
    }
	otherlv_19=':' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getParameterUssdAccess().getColonKeyword_1_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterUssdAccess().getLiCodeLINEIDENTIFICATIONEnumRuleCall_1_2_2_0()); 
	    }
		lv_liCode_20_0=ruleLINEIDENTIFICATION		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterUssdRule());
	        }
       		set(
       			$current, 
       			"liCode",
        		lv_liCode_20_0, 
        		"LINEIDENTIFICATION");
	        afterParserOrEnumRuleCall();
	    }

)
)))(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterUssdAccess().getUssdregistrationUSSDREGISTRATIONEnumRuleCall_2_0()); 
	    }
		lv_ussdregistration_21_0=ruleUSSDREGISTRATION		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterUssdRule());
	        }
       		set(
       			$current, 
       			"ussdregistration",
        		lv_ussdregistration_21_0, 
        		"USSDREGISTRATION");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleParameterSms
entryRuleParameterSms returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterSmsRule()); }
	 iv_ruleParameterSms=ruleParameterSms 
	 { $current=$iv_ruleParameterSms.current; } 
	 EOF 
;

// Rule ParameterSms
ruleParameterSms returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='From' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParameterSmsAccess().getFromKeyword_0_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterSmsAccess().getColonKeyword_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterSmsRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getParameterSmsAccess().getFromUECrossReference_0_2_0()); 
	}

)
))(	otherlv_3='To' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParameterSmsAccess().getToKeyword_1_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterSmsAccess().getColonKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterSmsRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getParameterSmsAccess().getToUECrossReference_1_2_0()); 
	}

)
))(
(
		lv_message_6_0=RULE_STRING
		{
			newLeafNode(lv_message_6_0, grammarAccess.getParameterSmsAccess().getMessageSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterSmsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"message",
        		lv_message_6_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleParameterData
entryRuleParameterData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterDataRule()); }
	 iv_ruleParameterData=ruleParameterData 
	 { $current=$iv_ruleParameterData.current; } 
	 EOF 
;

// Rule ParameterData
ruleParameterData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='From' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParameterDataAccess().getFromKeyword_0_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterDataAccess().getColonKeyword_0_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterDataRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getParameterDataAccess().getFromUECrossReference_0_2_0()); 
	}

)
))(	otherlv_3='url' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParameterDataAccess().getUrlKeyword_1_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterDataAccess().getColonKeyword_1_1());
    }
(
(
		lv_url_5_0=RULE_STRING
		{
			newLeafNode(lv_url_5_0, grammarAccess.getParameterDataAccess().getUrlSTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"url",
        		lv_url_5_0, 
        		"STRING");
	    }

)
))?(	otherlv_6='To' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getParameterDataAccess().getToKeyword_2_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getParameterDataAccess().getColonKeyword_2_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterDataRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getParameterDataAccess().getToUECrossReference_2_2_0()); 
	}

)
)	otherlv_9='data' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getParameterDataAccess().getDataKeyword_2_3());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getParameterDataAccess().getColonKeyword_2_4());
    }
(
(
		lv_data_11_0=RULE_STRING
		{
			newLeafNode(lv_data_11_0, grammarAccess.getParameterDataAccess().getDataSTRINGTerminalRuleCall_2_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"data",
        		lv_data_11_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleParameterMixer
entryRuleParameterMixer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterMixerRule()); }
	 iv_ruleParameterMixer=ruleParameterMixer 
	 { $current=$iv_ruleParameterMixer.current; } 
	 EOF 
;

// Rule ParameterMixer
ruleParameterMixer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterMixerAccess().getMixerMIXEREnumRuleCall_0_0_0()); 
	    }
		lv_mixer_0_0=ruleMIXER		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterMixerRule());
	        }
       		set(
       			$current, 
       			"mixer",
        		lv_mixer_0_0, 
        		"MIXER");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterMixerAccess().getColonKeyword_0_1());
    }
(
(
		lv_value_2_0=RULE_INT
		{
			newLeafNode(lv_value_2_0, grammarAccess.getParameterMixerAccess().getValueINTTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterMixerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"INT");
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterMixerAccess().getOptionMIXEROPTIONSEnumRuleCall_1_0()); 
	    }
		lv_option_3_0=ruleMIXEROPTIONS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterMixerRule());
	        }
       		set(
       			$current, 
       			"option",
        		lv_option_3_0, 
        		"MIXEROPTIONS");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Rule MIXEROPTIONS
ruleMIXEROPTIONS returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
(	enumLiteral_0='Reset' 
	{
        $current = grammarAccess.getMIXEROPTIONSAccess().getResetEnumLiteralDeclaration().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMIXEROPTIONSAccess().getResetEnumLiteralDeclaration()); 
    }
);



// Rule MIXER
ruleMIXER returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='P1' 
	{
        $current = grammarAccess.getMIXERAccess().getP1EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMIXERAccess().getP1EnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='P2' 
	{
        $current = grammarAccess.getMIXERAccess().getP2EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMIXERAccess().getP2EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='p3' 
	{
        $current = grammarAccess.getMIXERAccess().getP3EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getMIXERAccess().getP3EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='p4' 
	{
        $current = grammarAccess.getMIXERAccess().getP4EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getMIXERAccess().getP4EnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='p5' 
	{
        $current = grammarAccess.getMIXERAccess().getP5EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getMIXERAccess().getP5EnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='p6' 
	{
        $current = grammarAccess.getMIXERAccess().getP6EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getMIXERAccess().getP6EnumLiteralDeclaration_5()); 
    }
));



// Rule USSDREGISTRATION
ruleUSSDREGISTRATION returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Activate' 
	{
        $current = grammarAccess.getUSSDREGISTRATIONAccess().getActivateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getUSSDREGISTRATIONAccess().getActivateEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Deactivate' 
	{
        $current = grammarAccess.getUSSDREGISTRATIONAccess().getDeactivateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getUSSDREGISTRATIONAccess().getDeactivateEnumLiteralDeclaration_1()); 
    }
));



// Rule CALLFORWARDING
ruleCALLFORWARDING returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='CFU' 
	{
        $current = grammarAccess.getCALLFORWARDINGAccess().getCfuEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCALLFORWARDINGAccess().getCfuEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='CFB' 
	{
        $current = grammarAccess.getCALLFORWARDINGAccess().getCfbEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCALLFORWARDINGAccess().getCfbEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='CFNA' 
	{
        $current = grammarAccess.getCALLFORWARDINGAccess().getCfnaEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getCALLFORWARDINGAccess().getCfnaEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='CFNR' 
	{
        $current = grammarAccess.getCALLFORWARDINGAccess().getCfnrEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getCALLFORWARDINGAccess().getCfnrEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='ACD' 
	{
        $current = grammarAccess.getCALLFORWARDINGAccess().getAcdEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getCALLFORWARDINGAccess().getAcdEnumLiteralDeclaration_4()); 
    }
));



// Rule BARRING
ruleBARRING returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='AllOutgoingCalls' 
	{
        $current = grammarAccess.getBARRINGAccess().getAllOutgoingCallsEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBARRINGAccess().getAllOutgoingCallsEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='AllIncomingCalls' 
	{
        $current = grammarAccess.getBARRINGAccess().getAllIncommingCallsEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBARRINGAccess().getAllIncommingCallsEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='AllOutgoingCallsExHome' 
	{
        $current = grammarAccess.getBARRINGAccess().getAllOutgoingCallsExHomeEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getBARRINGAccess().getAllOutgoingCallsExHomeEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='AllIncommingCallsRoaming' 
	{
        $current = grammarAccess.getBARRINGAccess().getAllIncommingCallsRoamingEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getBARRINGAccess().getAllIncommingCallsRoamingEnumLiteralDeclaration_3()); 
    }
));



// Rule LINEIDENTIFICATION
ruleLINEIDENTIFICATION returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='CLIP' 
	{
        $current = grammarAccess.getLINEIDENTIFICATIONAccess().getClipEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLINEIDENTIFICATIONAccess().getClipEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='CLIR' 
	{
        $current = grammarAccess.getLINEIDENTIFICATIONAccess().getClirEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLINEIDENTIFICATIONAccess().getClirEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='COLP' 
	{
        $current = grammarAccess.getLINEIDENTIFICATIONAccess().getColpEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getLINEIDENTIFICATIONAccess().getColpEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='COLR' 
	{
        $current = grammarAccess.getLINEIDENTIFICATIONAccess().getColrEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getLINEIDENTIFICATIONAccess().getColrEnumLiteralDeclaration_3()); 
    }
));



// Rule ANSWERRESPONSE
ruleANSWERRESPONSE returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Listening' 
	{
        $current = grammarAccess.getANSWERRESPONSEAccess().getListeningEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getANSWERRESPONSEAccess().getListeningEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='OffHook' 
	{
        $current = grammarAccess.getANSWERRESPONSEAccess().getOffhookEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getANSWERRESPONSEAccess().getOffhookEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='HangUp' 
	{
        $current = grammarAccess.getANSWERRESPONSEAccess().getHangupEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getANSWERRESPONSEAccess().getHangupEnumLiteralDeclaration_2()); 
    }
));



// Rule CALLRESPONSE
ruleCALLRESPONSE returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Listening' 
	{
        $current = grammarAccess.getCALLRESPONSEAccess().getListeningEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCALLRESPONSEAccess().getListeningEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='HangUp' 
	{
        $current = grammarAccess.getCALLRESPONSEAccess().getHangupEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCALLRESPONSEAccess().getHangupEnumLiteralDeclaration_1()); 
    }
));



// Rule UEPARAMS
ruleUEPARAMS returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='IMEI' 
	{
        $current = grammarAccess.getUEPARAMSAccess().getImeiEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getUEPARAMSAccess().getImeiEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='MSISDN' 
	{
        $current = grammarAccess.getUEPARAMSAccess().getMsisdnEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getUEPARAMSAccess().getMsisdnEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


