/**
 * The DragonX DSL is a grammar for definition and execution of tests. 
 * 
 * author: Christophe Bouhier
 * 
 * */
grammar com.netxforge.netxtest.DragonX with org.eclipse.xtext.common.Terminals

generate dragonX "http://www.netxforge.com/netxtest/DragonX"

// DragonX script exists of UE- and TestCase blocks
DragonX:
	ues+=UE+
	tests+=TestCase+;

	// UE block
UE:
	'UE' name=ID '{' meta+=UEMetaObject+ '}';

UEMetaObject:
	(params=UEPARAMS ':' paramValue=UEValue) | (DescriptionObject);

UEValue:
	STRING | ID | INT;

	// TestCase block	
TestCase:
	'TestCase' name=ID '{' (description=DescriptionObject)? procedure=Procedure '}';

DescriptionObject:
	'Description' ':' description=STRING;

Procedure:
	'Test' '{' actions+=Action+ '}';

Action:
	actionCode=ACTIONCODE |
	'{' parameterSet+=Parameter '}';

	// Superclass ParameterSet
//ParameterSet:
//	parameters+=(ParameterSetCall | ParameterSetAnswer | ParameterSetUssd | ParameterSetSms | ParameterSetData |
//	ParameterSetMixer);
//
//ParameterSetCall:
//	parameters+=ParameterCall+;
//
//ParameterSetAnswer:
//	parameters+=ParameterAnswer+;
//
//ParameterSetUssd:
//	parameters+=ParameterUssd+;
//
//ParameterSetSms:
//	parameters+=ParameterSms+;
//
//ParameterSetData:
//	parameters+=ParameterData+;
//
//ParameterSetMixer:
//	parameters+=ParameterMixer+;

// Superclass Parameter
//Parameter:
//	ParameterCall | ParameterAnswer | ParameterUssd | ParameterSms | ParameterData | ParameterMixer;
Parameter:
	name=PARAM_NAME
	type=ParamType;

ParamType:
	ueRef=[UE] | value=INT | response=ParamResponseType;

ParamResponseType:
	paramResponse+=PARAM_RESPONSE+;

enum PARAM_NAME:
	from='From' | to='To' | callDuration='CallingTime' | responseTime='ResponseTime' | listeningTime='ListeningTime' |
	data='Data' | message='SMS' | ussdCode='UssdCode' | serviceDelay='ServiceDelay';

enum PARAM_RESPONSE:
	listining='Listening' | offhook='OffHook' | hangup='HangUp';
	//
//ParameterCall returns Parameter:
//	(name='From' ':' ueRef=[UE]) | (name='To' ':' ueRef=[UE]) | (name='CallingTime' ':' value=INT) | (name='Response' ':'
//	response=('Listening' | 'HangUp')) | (name='ResponseTime' ':' value=INT);
//
//ParameterAnswer returns Parameter:
//	(name='From' ':' ueRef=[UE]) | (name='ListeningTime' ':' value=INT) | (name='ResponseTime' ':' value=INT) |
//	(name='Response' ':' response=('Listening' | 'OffHook' | 'HangUp'));
//
//ParameterUssd:
//	(name='From' ':' ueRef=[UE]) | (name='UssdCode' ':' ussdCode=USSDCODES) | (name='Destination' ':' dest=[UE]) |
//	(name='ServiceDelay' ':' serviceDelay=INT) | (name='Code' ':' code=INT) | (name='Registration' ':'
//	registration=('Activate' | 'Deactivate'));
//
//ParameterSms:
//	(name='From' ':' ueRef=[UE]) | (name='To' ':' ueRef=[UE]) | (name='Message' ':' message=STRING);
//
//ParameterData:
//	(name='From' ':' ueRef=[UE]) | (name='To' ':' ueRef=[UE]) | (name='Url' ':' url=STRING) | (name='Data' ':'
//	value=STRING);
//
//ParameterMixer:
//	(name='P1' ':' value=INT) | (name='P2' ':' value=INT) | (name='P3' ':' value=INT) | (name='P4' ':' value=INT) |
//	(name='P5' ':' value=INT) | (name='P6' ':' value=INT) | (name='Option' ':' option='Reset');
enum ACTIONCODE:
	call='CALL'
	| answer='ANSWER' | ussd='USSD' | sms='SMS' | data='DATA' | mixer='MIXER';

enum UEPARAMS:
	imei='IMEI' | msisdn='MSISDN';

enum USSDCODES:
	cfu='CFU' | cfb='CFB' | cfna='CFNA' | cfnr='CFNR' | acd='ACD' | allOutgoingCalls='AllOutgoingCalls' |
	allIncommingCalls='AllIncomingCalls' | allOutgoingCallsExHome='AllOutgoingCallsExHome' |
	allIncommingCallsRoaming='AllIncommingCallsRoaming' | clip='CLIP' | clir='CLIR' | colp='COLP' | colr='COLR';

QUALIFIED_ID:
	ID (' . ' ID)*;